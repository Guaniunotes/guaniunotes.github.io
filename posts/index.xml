<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 蜗牛笔记</title>
    <link>https://guaniunotes.github.io/posts/</link>
    <description>Recent content in Posts on 蜗牛笔记</description>
    <image>
      <title>蜗牛笔记</title>
      <url>https://guaniunotes.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://guaniunotes.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 01 Jul 2024 20:28:52 +0800</lastBuildDate>
    <atom:link href="https://guaniunotes.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>不用vercel如何在VPS上部署你的Next.js项目</title>
      <link>https://guaniunotes.github.io/posts/build-nextjs-app-vps/</link>
      <pubDate>Mon, 01 Jul 2024 20:28:52 +0800</pubDate>
      <guid>https://guaniunotes.github.io/posts/build-nextjs-app-vps/</guid>
      <description>一般大家部署Next.js项目会直接用vercel的服务，毕竟它一键部署，方便且迅速，什么配置都不用操心。但是，除了使用vercel的平台，</description>
      <atom:encoded><![CDATA[<p>一般大家部署Next.js项目会直接用vercel的服务，毕竟它一键部署，方便且迅速，什么配置都不用操心。但是，除了使用vercel的平台，我们也可以通过虚拟专用服务器（VPS）自行部署Next.js项目。下面分享一下在VPS上部署Next.js项目的方法。</p>
<h2 id="1-vps基础配置">1. VPS基础配置</h2>
<ol>
<li>
<p>选择VPS服务商（本例以<a href="https://hostinger.com.hk?REFERRALCODE=1MOFENG3340">Hostinger</a>服务商为例）<br>
登陆HOSTINGER VPS面板，选择VPS的位置，一般选择United States，你也可以选择离你服务的用户近的主机位置。</p>
</li>
<li>
<p>配置操作系统。此时有三个选项：</p>
<ul>
<li>OS with Control Panel 带控制面板的系统</li>
<li>Plain OS 没有控制面板的系统</li>
<li>Applications 带有应用程序的系统，包含wordpress，Nextcloud，Node.js<br>
建议选择第一个，这样能更轻松地管理多个应用程序或多个站点。</li>
</ul>
</li>
<li>
<p>选择应用程序CloudPanel。</p>
</li>
<li>
<p>不用勾选任何其他的软件。</p>
</li>
<li>
<p>为控制面板设置密码。</p>
</li>
<li>
<p>设置SSH访问密码，等待几分钟后，完成设置。</p>
</li>
<li>
<p>接下来进行域名购买，也可以后面再设置。<br>
此时，我们进入VPS控制面板，记下IP address后面会用到。</p>
</li>
</ol>
<h2 id="2-项目环境配置">2. 项目环境配置</h2>
<ol>
<li>在VPS控制面板的SSH access中可以找到一行：</li>
</ol>
<blockquote>
<p>Terminal ssh <a href="mailto:root@xx.xx.xx.xxx">root@xx.xx.xx.xxx</a></p>
</blockquote>
<p>我们需要在电脑终端中运行它。 你可以使用vs code运行，或者单独打开终端操作。</p>
<ol start="2">
<li>打开独立终端，输入你的VPS上的IP地址</li>
</ol>
<pre tabindex="0"><code>ssh root@xx.xx.xx.xxx
</code></pre><p>出现独立安全问题，选择yes。输入之前设置的SSH访问密码（不是VPS面板的密码）。登陆成功后，能看到云面板的信息。</p>
<ol start="3">
<li>检查git是否正常安装。
<ul>
<li>输入 pwd 查看当前工作目录，可以看到我们处于/root目录下。</li>
<li>输入ls，检查此处的文件。</li>
<li>输入node -v，会发现服务器没有安装node.js。</li>
<li>先查询git是否安装，输入git，发现git已经预先安装。</li>
</ul>
</li>
<li>安装NPM。</li>
</ol>
<pre tabindex="0"><code>   apt install NPM
   npm -v
</code></pre><p>安装完毕后，检查当前安装的版本，如果出现版本号，说明安装成功。</p>
<ol start="5">
<li>安装Node.js</li>
</ol>
<pre tabindex="0"><code>   npm install -g n //安装指定版本
   n lastest //安装最新版本
   node -v
</code></pre><p>可以看到最新的node.js版本。NEXT.js的应用此时默认运行地址为localhost：3000，也就是我们的VPS的IP地址。</p>
<ol start="6">
<li>新增Nginx站点配置</li>
</ol>
<pre tabindex="0"><code>nginx -v 
</code></pre><p>先检查nginx是否已经安装。
添加站点配置文件(文件名你自己定义，假设为Nextjs-app)。
运行以下代码，这将打开一个编辑器</p>
<pre tabindex="0"><code>sudo nano /etc/nginx/sites-availables/Nextjs-app.conf
</code></pre><p>在编辑器中粘贴以下代码片段：</p>
<pre tabindex="0"><code>server {
    listen 80;
    server_name xx.xx.xx.xxx; # VPS IP address

    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_headr Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
</code></pre><p>粘贴完毕后回车，退出编辑。</p>
<p>检查文件是否有效，输入以下命令：</p>
<pre tabindex="0"><code>ls /etc/nginx/sites-availables/  
</code></pre><p>如果返回文件名如Nextjs-app.conf，这便完成了nginx的一个站点的配置。</p>
<ol start="7">
<li>启用服务器配置<br>
输入以下内容，创建一个链接：</li>
</ol>
<pre tabindex="0"><code>sudo ln -s /etc/nginx/sites-availables/Nextjs-app.conf /etc/nginx/sites-enabled/ 
</code></pre><p>检查站点启用路径中的内容：</p>
<pre tabindex="0"><code>ls etc/nginx/sites-enabled/
</code></pre><p>结果应该显示：Nextjs-app.conf default.conf</p>
<h2 id="3-nextjs项目安装">3. Next.js项目安装</h2>
<ol>
<li>为你的Next.js项目创建目录</li>
</ol>
<pre tabindex="0"><code>mkdir /var/www/Nextjs-app
</code></pre><ol start="2">
<li>进入该目录</li>
</ol>
<pre tabindex="0"><code>cd /var/www/Nextjs-app
</code></pre><p>输入 ls，可以看到目录现在是空的。</p>
<ol start="3">
<li>从你的Github项目仓克隆到这个目录中</li>
</ol>
<pre tabindex="0"><code>git clone https://github.com/yourname/Nextjs-app.git
</code></pre><ol start="4">
<li>进入应用目录</li>
</ol>
<pre tabindex="0"><code>cd Nextjs-app
npm install
</code></pre><p>安装应用，但此时会出错。解决这个问题的方法，就是退出ssh并重新登录。</p>
<pre tabindex="0"><code>exit 
</code></pre><p>退出ssh，然后再次登陆:</p>
<pre tabindex="0"><code>ssh root add
</code></pre><p>再次进入你的项目目录：</p>
<pre tabindex="0"><code>cd /var/www/Nextjs-app/Nextjs-app/
</code></pre><p>再次运行</p>
<pre tabindex="0"><code>npm install 
</code></pre><p>构建应用程序:</p>
<pre tabindex="0"><code>npm run build 
</code></pre><ol start="5">
<li>由于更新了配置，所以需要重新启动Nginx</li>
</ol>
<pre tabindex="0"><code>sudo service nginx restart 
</code></pre><ol start="6">
<li>运行生产版本:</li>
</ol>
<pre tabindex="0"><code>npm run start
</code></pre><p>部署完毕。此时就可以在浏览器输入你的VPS IP地址访问你的Next.js应用程序。</p>
]]></atom:encoded>
    </item>
    <item>
      <title>黑客与画家 -保罗·格雷厄姆</title>
      <link>https://guaniunotes.github.io/posts/hackers-and-painters/</link>
      <pubDate>Mon, 01 Jul 2024 16:28:52 +0800</pubDate>
      <guid>https://guaniunotes.github.io/posts/hackers-and-painters/</guid>
      <description>黑客和画家的共同之处在于他们都是创造者。和作曲家、建筑师和作家一样，黑客和画家试图做的是创造出好的东西。</description>
      <atom:encoded><![CDATA[<p>原文链接：<a href="https://www.paulgraham.com/hp.html">https://www.paulgraham.com/hp.html</a></p>
<p>（本文摘自保罗·格雷厄姆在哈佛大学的一次客座讲座，该讲座包含了他早些时候在美国东北大学的演讲。）</p>
<p>当我在计算机科学研究生院毕业后，我去艺术学院学习绘画。很多人似乎对一个对计算机感兴趣的人也对绘画感兴趣感到惊讶。他们似乎认为黑客和画家是两种非常不同的工作类型——认为黑客是冷静、精确和有条理的，而绘画是某种原始冲动的狂热表达。</p>
<p>这两种形象都是错误的。黑客和画家有很多共同之处。实际上，在我认识的所有不同类型的人中，黑客和画家是最相似的。</p>
<p>黑客和画家的共同之处在于他们都是创造者。和作曲家、建筑师和作家一样，黑客和画家试图做的是创造出好的东西。他们不是在进行研究本身，尽管如果在尝试创造出好的东西的过程中他们发现了某种新技术，那就更好了。</p>
<p>我一直不喜欢“计算机科学”这个词。我不喜欢它的主要原因是，根本就没有这样的东西。计算机科学是由历史上偶然事件而结合在一起的松散相关领域的大杂烩，就像南斯拉夫一样。在一端，有些人实际上是数学家，但他们把他们正在做的事情称为计算机科学，这样他们就可以获得DARPA的资助。在中间，有些人正在研究类似计算机的自然历史——例如，研究通过网络路由数据的算法的行为。然后在另一个极端，有黑客，他们试图编写有趣的软件，对他们来说，计算机只是一种表达媒介，就像混凝土对建筑师或油漆对画家一样。就好像数学家、物理学家和建筑师都必须在同一个系里一样。</p>
<p>有时黑客所做的事情被称为“软件工程”，但这个术语同样具有误导性。优秀的软件设计师并不比建筑师更像工程师。建筑和工程之间的界限并没有明确定义，但它确实存在。它介于做什么和怎么做之间：建筑师决定做什么，工程师弄清楚如何去做。不应该过于分开什么和怎么做。如果你试图在不理解如何做的情况下决定做什么，你就在自找麻烦。但是黑客当然可以不仅仅是决定如何实现某个规范。在最好的情况下，它是在创建规范——尽管结果表明，做到这一点的最佳方式是去实现它。</p>
<p>也许有一天“计算机科学”会像南斯拉夫一样被拆分成它的组成部分。这可能是件好事。特别是如果它意味着我的故乡，黑客，能够获得独立。</p>
<p>将所有这些不同类型的工作捆绑在一个系里在行政上可能很方便，但在智力上是令人困惑的。这就是我不喜欢“计算机科学”这个名字的另一个原因。可以说，中间的人正在做一些类似实验科学的事情。但是两端的人，黑客和数学家，实际上并没有在做科学。</p>
<p>数学家似乎并不在意这一点。他们愉快地开始证明定理，就像数学系的其他数学家一样，可能很快就不再注意到他们工作的大楼外面写着“计算机科学”。但对黑客来说，这个标签是个问题。如果他们所做的事情被称为科学，那会让他们觉得他们应该表现得像科学家一样。</p>
<p>所以，与其做他们真正想做的事情，即设计漂亮的软件，大学和研究实验室里的黑客觉得他们应该写研究论文。在最好的情况下，论文只是一种形式。黑客编写很酷的软件，然后写一篇关于它的论文，论文成为了软件所代表成就的代理。但通常这种不匹配会引起问题。很容易从构建美好事物转向构建更适合作为研究论文主题的丑陋事物。</p>
<p>不幸的是，美好事物并不总是成为论文的最佳主题。首先，研究必须是原创的——正如任何写过博士论文的人都知道，确保你正在探索处女地的方法是划定一块没有人想要的地方。其次，研究必须是实质性的——尴尬的系统会产生更丰富的论文，因为你可以写关于你为了完成事情而必须克服的障碍。没有什么比从错误的假设开始更能产生棘手的问题了。大部分人工智能都是这个规则的例子；如果你假设知识可以被表示为一个命题逻辑表达式的列表，其中参数代表抽象概念，你就会有很多论文要写关于如何让它奏效。就像里基·里卡多常说的，“露西，你得解释很多。”</p>
<p>创造美好事物的方法通常是对已经存在的事物进行微妙的调整，或者以稍微新的方式结合现有的思想。这种工作很难在研究论文中传达。</p>
<p>那么，为什么大学和研究实验室继续根据出版物来评判黑客呢？出于同样的原因，“学术能力”通过简单的标准化测试来衡量，或者程序员的生产力以代码行数来衡量。这些测试很容易应用，没有什么比一个有效的简单测试更诱人的了。</p>
<p>衡量黑客实际试图做的事情，设计漂亮的软件，会更加困难。你需要良好的设计感来判断好的设计。而且，人们能够认识到好的设计的能力与他们自信能够做到这一点的信心之间没有相关性，可能只有一个负面的相关性。</p>
<p>唯一的外部测试是时间。随着时间的推移，美好事物往往会蓬勃发展，丑陋的事物往往会被丢弃。不幸的是，所涉及的时间可能比人的寿命还要长。塞缪尔·约翰逊说，一个作家的声誉需要一百年才能收敛。你必须等待作家的有影响力的朋友去世，然后等待他们所有的追随者去世。</p>
<p>我认为黑客只能接受他们的声誉中有很大一部分是随机的。在这方面，他们与其他创造者没有什么不同。事实上，相比之下，他们是幸运的。时尚的影响在黑客领域不像在绘画中那么大。</p>
<p>比让人们误解你的作品更糟糕的事情是你自己误解了自己的作品。相关领域是你寻找灵感的地方。如果你发现自己身处计算机科学系，很自然地就会倾向于相信，比如，黑客是理论计算机科学理论的应用版本。在我整个研究生学习期间，我心中一直有一种不舒服的感觉，那就是我应该了解更多的理论，我在期末考试后三周内忘记了所有那些知识是非常疏忽的。</p>
<p>现在我意识到我错了。黑客需要理解计算理论，就像画家需要理解油漆化学一样。你需要知道如何计算时间和空间复杂度，以及图灵完备性。你可能还想记住状态机的概念，以防你需要编写解析器或正则表达式库。事实上，画家需要记住的关于油漆化学的知识比这更多。</p>
<p>我发现，最好的想法来源不是其他有“计算机”这个词的领域，而是其他创造者所在的领域。绘画比计算理论提供了更丰富的思想来源。</p>
<p>例如，我在大学被教导，在甚至靠近计算机之前，应该在纸上完全弄清楚一个程序。我发现我不是这样编程的。我发现我喜欢坐在计算机前编程，而不是一张纸前。更糟糕的是，我没有耐心地写出一个完整的程序并确信它是正确的，而是倾向于只是吐出代码，这些代码是无可救药地破损的，并逐渐将其塑造成形。调试，我被教导，是一种最后的通过，你在那里捕捉到打字错误和疏忽。按照我工作的方式，似乎编程由调试组成。</p>
<p>很长一段时间，我为此感到难过，就像我曾经因为没有按照他们在小学教我的方式握铅笔而感到难过一样。如果我看看其他创造者，画家或建筑师，我会意识到有名字来形容我正在做的事情：素描。据我所知，他们在大学教我编程的方式都是错误的。你应该在编写程序时弄清楚程序，就像作家、画家和建筑师一样。</p>
<p>意识到这一点对软件设计有真正的影响。这意味着编程语言首先应该是可塑的。编程语言是用来思考程序的，而不是用来表达你已经想过的程序。它应该是一支铅笔，而不是一支钢笔。如果人们真的像他们在大学教我的那样编写程序，静态类型将是一个很好的主意。但这不是我知道的任何黑客编写程序的方式。我们需要一种语言，让我们可以涂鸦、涂抹和涂抹，而不是一种语言，让你必须坐在膝盖上放着一杯类型，与一个严格的老阿姨编译器进行礼貌的交谈。</p>
<p>当我们谈论静态类型时，与创造者认同将使我们免受另一个困扰科学的问题：数学羡慕。每个在科学领域的人都秘密地认为数学家比他们更聪明。我认为数学家也相信这一点。总之，结果是科学家倾向于使他们的工作尽可能看起来像数学。在像物理这样的领域，这可能没有太大的伤害，但你越远离自然科学，问题就越大。</p>
<p>一页公式看起来就是令人印象深刻。（提示：为了额外的印象深刻，请使用希腊变量。）所以有一种很大的诱惑去研究你可以正式处理的问题，而不是比如说重要的问题。</p>
<p>如果黑客与其他创造者，如作家和画家认同，他们就不会感到诱惑去这样做。作家和画家不会遭受数学羡慕。他们感觉他们正在做一些完全无关的事情。所以，我认为黑客也是。</p>
<p>如果大学和研究实验室阻止黑客做他们想做的工作，也许他们的归属是在公司。不幸的是，大多数公司也不会让黑客做他们想做的。大学和研究实验室迫使黑客成为科学家，公司迫使他们成为工程师。</p>
<p>我自己最近才发现这一点。当雅虎买下Viaweb时，他们问我我想做什么。我一直不太喜欢商业方面，我说我只想要黑客。当我到达雅虎时，我发现对他们来说，黑客意味着实现软件，而不是设计它。程序员被视为技术员，他们将产品经理的愿景（如果那是这个词）转化为代码。</p>
<p>这似乎是大公司的默认计划。他们这样做是因为它降低了结果的标准差。只有一小部分黑客能够真正设计软件，对于经营公司的人来说，很难挑选出这些人。所以与其将软件的未来托付给一个杰出的黑客，大多数公司将事情设置为由委员会设计，黑客只是实现设计。</p>
<p>如果你想在某个时候赚钱，请记住这一点，因为这是初创公司获胜的原因之一。大公司希望降低设计结果的标准差，因为他们想避免灾难。但是当你抑制振荡时，你也会失去高点和低点。对于大公司来说，这不是问题，因为他们不是通过制造伟大的产品而获胜。大公司通过比其他大公司不那么糟糕而获胜。</p>
<p>所以如果你能找到一种方法，与一个足够大的公司进行设计战争，它的软件是由产品经理设计的，他们永远无法跟上你。这些机会不容易找到。很难让大公司参与设计战争，就像很难让城堡内的对手进行肉搏战一样。例如，写一个比微软Word更好的文字处理器可能很容易，但是微软，在他们的操作系统垄断堡垒内，可能甚至不会注意到你做了。</p>
<p>设计战争的战场应该在新市场，那里还没有人设防。在这些地方，你可以通过大胆的设计方法，让同一批人既设计又实现产品，从而获得巨大的胜利。微软自己在开始时就是这样做的。苹果和惠普也是如此。我怀疑几乎每个成功的初创公司都是如此。</p>
<p>所以，构建伟大软件的一种方式是创办自己的初创公司。然而，这有两个问题。一是在初创公司中，除了编写软件之外，你还需要做很多事情。在Viaweb，如果我觉得我有四分之一的时间在黑客，我就觉得自己很幸运。我必须做的其他事情从乏味到可怕都有。我有一个基准，因为我曾不得不离开董事会会议去填补一些蛀牙。我记得坐在牙医的椅子上，等待钻头，感觉像是在度假。</p>
<p>初创公司的另一个问题是，赚钱的软件和有趣的软件类型之间没有太多重叠。编程语言编写起来很有趣，微软的第一个产品实际上是一个，但现在没有人会为编程语言付费。如果你想赚钱，你往往会被迫去解决那些没有人愿意免费解决的棘手问题。</p>
<p>所有创造者都面临这个问题。价格由供求关系决定，对于有趣工作的需求并不像解决个别客户的平凡问题那样大。在百老汇外的剧目中演出并不像在某个贸易展览会的摊位上穿猩猩服那样赚钱。写小说并不像为垃圾处理机写广告文案那样赚钱。同样，黑客编程语言并不像找出如何将某家公司的遗留数据库连接到他们的Web服务器那样赚钱。</p>
<p>我认为，对于软件来说，解决这个问题的答案是一个对几乎所有创造者都已知的概念：日常工作。这个词最初来自音乐家，他们在晚上演出。更普遍地，这意味着你有一种工作是为了赚钱，另一种工作是为了爱好。</p>
<p>几乎所有创造者在他们职业生涯的早期都有日常工作。画家和作家出了名地有。如果你幸运的话，你可以找到一份与你真正工作密切相关的日常工作。音乐家经常在唱片店工作。一个在某些编程语言或操作系统上工作的黑客也许也能在日常工作中使用它。<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
<p>当我说答案就是让黑客有日常工作，并在业余时间开发漂亮的软件时，我不是在提出一个新想法。这就是开源黑客工作的全部。我要说的是，开源可能是正确的模式，因为它已经得到了所有其他创造者的独立确认。</p>
<p>对我来说，似乎任何雇主都会不愿意让黑客参与开源项目，这令人惊讶。在Viaweb，我们不愿意雇佣那些不参与的人。当我们面试程序员时，我们最关心的是他们在业余时间写了什么软件。你不能真正做好任何事情，除非你爱它，如果你喜欢黑客，你将不可避免地在业余时间工作在自己的项目上。<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup></p>
<p>因为黑客是创造者而不是科学家，寻找隐喻的正确地方不是在科学中，而是在其他类型的创造者中。绘画还能教我们什么关于黑客攻击的知识？</p>
<p>我们可以从绘画的例子中学习或至少确认的一件事是如何学习黑客。你主要是通过实践来学习绘画。对于黑客也是如此。大多数黑客不是通过大学编程课程来学习黑客的。他们在十三岁时通过编写自己的程序来学习黑客。即使在大学课程中，你主要是通过黑客来学习黑客。<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup></p>
<p>因为画家留下了工作的痕迹，你可以通过实践来观察他们的学习过程。如果你按时间顺序看一个画家的作品，你会发现每幅画都建立在以前学到的东西上。当一幅画中有什么东西运作得非常好时，你通常可以在早期的画作中找到它的1.0版本，以较小的形式出现。</p>
<p>我认为大多数创造者都是这样工作的。作家和建筑师似乎也是如此。也许黑客应该更像画家，定期从头开始，而不是多年来一直从事一个项目，并试图将他们后来的想法作为修订纳入其中。</p>
<p>黑客通过实践学习黑客的事实是黑客与科学不同的又一迹象。科学家不是通过实践来学习科学，而是通过做实验室和问题集。科学家从一开始就做完美的工作，从某种意义上说，他们只是试图复制别人已经为他们完成的工作。最终，他们达到了可以做原创工作的地步。而黑客，从一开始就在做原创工作；只是非常糟糕。所以黑客从原创开始，变得优秀，科学家从优秀开始，变得原创。</p>
<p>另一种创造者学习的方式是通过例子。对于画家来说，博物馆是技术的参考书库。几百年来，模仿伟大大师的作品一直是画家传统教育的一部分，因为模仿迫使你仔细观察画作的制作方式。</p>
<p>作家也这样做。本杰明·富兰克林通过总结艾迪生和斯蒂尔的散文要点，然后尝试复制它们来学习写作。雷蒙德·钱德勒也用侦探故事做了同样的事情。</p>
<p>同样，黑客也可以通过查看好的程序来学习编程——不仅仅是它们做什么，还有源代码。开源运动不太宣传的好处之一是它使学习编程变得更容易。当我学习编程时，我们主要依赖书籍中的例子。当时唯一大量可用的代码是Unix，但即使这个也不是开源的。大多数人阅读的源代码是约翰·莱昂斯的书的非法影印本，尽管它是在1977年写的，直到1996年才被允许出版。</p>
<p>我们可以从绘画中得到的另一个例子是画作是如何通过逐步改进而创造出来的。画作通常以素描开始。细节逐渐填充进去。但这不仅仅是填充的过程。有时，最初的计划结果是错误的。无数的画作，当你在X光下看它们时，会发现肢体被移动或面部特征被重新调整。</p>
<p>这里有一个我们可以从绘画中学到的地方。我认为黑客也应该这样工作。不切实际的是期望程序的规范会是完美的。你最好提前承认这一点，并编写程序，允许规范在过程中改变。</p>
<p>（大公司的组织结构使得它们很难做到这一点，所以这里又是初创公司的优势之一。）</p>
<p>现在，我想大家都应该对过早优化的危险有所了解。我认为我们应该同样担心过早的设计——过早决定程序应该做什么。</p>
<p>正确的工具可以帮助我们避免这种危险。一个好的编程语言应该像油画颜料一样，让你容易改变主意。动态类型在这里是赢家，因为你不必提前承诺特定的数据表示。但我认为灵活性的关键是使语言非常抽象。最容易改变的程序是一个非常短的程序。</p>
<p>这听起来像是一个悖论，但一幅伟大的画作必须比它认为的更好。例如，当列奥纳多在国家美术馆画吉内薇拉·德·本奇的肖像时，他在她的头后面放了一丛杜松灌木。在其中他仔细地画了每一片叶子。许多画家可能会认为，这只是放在背景中来框住她的头的东西。没有人会这么仔细地看它。</p>
<p>但列奥纳多不是这样。他在画作的一部分工作的努力程度根本不取决于他预期别人会多仔细地看它。他就像迈克尔·乔丹。无情的。</p>
<p>无情会赢，因为总的来说，看不见的细节会变得可见。当人们走过吉内薇拉·德·本奇的肖像时，他们的注意力通常立即被它吸引，甚至在他们看到标签并注意到它说列奥纳多·达·芬奇之前。所有这些看不见的细节结合起来产生了一些令人惊叹的东西，就像一千个几乎听不见的声音都在调上唱歌。</p>
<p>同样，伟大的软件需要对美有狂热的奉献。如果你深入好的软件，你会发现没有人应该看到的部分也是美丽的。我不是说我自己写伟大的软件，但我知道，当涉及到代码时，如果我以同样的方式对待日常生活，我的行为方式将使我有资格获得处方药。看到缩进严重或使用丑陋的变量名称的代码让我发疯。</p>
<p>如果黑客只是一个实现者，将规范转化为代码，那么他可以像挖沟一样从头到尾工作。但如果黑客是创造者，我们就必须考虑到灵感。</p>
<p>在黑客工作中，像绘画一样，工作是周期性的。有时你对某个新项目感到兴奋，你想一天工作十六个小时。其他时候，似乎没有什么有趣的。</p>
<p>想做好的工作，你必须考虑这些周期，因为它们受到你对它们的反应的影响。当你在山上驾驶一辆手动档汽车时，有时你必须稍微放松离合器以避免熄火。同样地，放松可以防止雄心壮志熄火。在绘画和黑客工作中，有一些任务是非常有雄心的，而另一些则是令人放心的日常事务。保存一些简单任务是一个好主意，以防你否则会熄火。</p>
<p>在黑客工作中，这可以字面意思是保存错误。我喜欢调试：这是黑客工作唯一一次像人们认为的那样直接。你有一个完全受限的问题，你所要做的就是解决它。你的程序应该做x。但它做了y。它在哪里出错了？你知道你最终会赢。这就像粉刷墙壁一样放松。</p>
<p>绘画的例子不仅可以教会我们如何管理自己的工作，还可以教会我们如何一起工作。许多过去的伟大艺术作品是多双手的工作，尽管博物馆墙上可能只有一个名字。列奥纳多是韦罗基奥工作室的学徒，画了《基督受洗》中的一个天使。这种事情是规则，而不是例外。米开朗基罗被认为是特别敬业的，因为他坚持要亲自画西斯廷教堂天花板上的所有人物。</p>
<p>据我所知，当画家在一幅画上合作时，他们从不在同一个地方工作。通常让大师画主要人物，助手画其他人物和背景。但你从来没有一个人在另一个人的工作上画画。</p>
<p>我认为这是软件合作的正确模型。不要推得太远。当一段代码被三四个不同的人编写，没有人真正拥有它，它最终会像一个公共休息室。它往往会感觉凄凉和被遗弃，并积累杂物。我认为正确的合作方式是将项目划分为明确定义的模块，每个模块都有明确的所有者，并且它们之间的接口被设计得非常仔细，如果可能的话，像编程语言一样明确。</p>
<p>像绘画一样，大多数软件旨在面向人类观众。因此，黑客像画家一样，必须具有同情心才能做出真正伟大的工作。你必须能够从用户的角度来看问题。</p>
<p>当我还是个孩子的时候，我总是被告知要从别人的角度来看问题。在实践中，这通常意味着做别人想要的，而不是我想要的。这当然给同理心带来了不好的名声，我特意不去培养它。</p>
<p>我错了。事实证明，从别人的角度来看问题是成功的秘密。这并不一定意味着要自我牺牲。远非如此。理解别人如何看待事情并不意味着你会为了他的利益而行动；在某些情况下——比如在战争中——你可能想做完全相反的事情。<sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup></p>
<p>大多数创造者为人类观众创造东西。为了吸引观众，你必须明白他们需要什么。几乎所有最伟大的画作都是人物画，因为人们对人物感兴趣。</p>
<p>同情心可能是一个好的黑客和一个伟大的黑客之间最重要的区别。一些黑客非常聪明，但在同理心方面实际上是唯我论者。对于这样的人很难设计出伟大的软件<sup id="fnref:5"><a href="#fn:5" class="footnote-ref" role="doc-noteref">5</a></sup>，因为他们不能从用户的角度来看问题。</p>
<p>判断人们同情心的一个方法是观察他们如何向没有技术背景的人解释技术问题。我们可能都知道一些尽管其他方面很聪明，但在这方面却非常糟糕的人。如果有人在晚宴上问他们编程语言是什么，他们可能会说类似这样的话：“哦，高级语言是编译器用来生成目标代码的输入。”高级语言？编译器？目标代码？显然不知道编程语言是什么的人，也不知道这些东西是什么。</p>
<p>软件的部分工作是自我解释。所以要编写好的软件，你必须理解用户了解得有多有限。他们会毫无准备地走到软件面前，它最好做他们猜测的事情，因为他们不会去读手册。我见过的最好的系统在这方面是1985年的原始Macintosh。它做到了软件几乎从不做的事情：它只是工作。<sup id="fnref:6"><a href="#fn:6" class="footnote-ref" role="doc-noteref">6</a></sup></p>
<p>源代码也应该自我解释。如果我能让人们对编程记住一句引用，那就是**《计算机程序的结构与解释》**开头的那一句。</p>
<blockquote>
<p>程序应该为人们编写，只是顺便让机器执行。</p>
</blockquote>
<p>你需要对你的用户和你的读者都有同理心。这符合你的利益，因为你将是他们中的一员。许多黑客编写了一个程序，结果在六个月后回来时，他们不知道它是如何工作的。我知道几个人在经历了这样的经历后发誓不再使用Perl。<sup id="fnref:7"><a href="#fn:7" class="footnote-ref" role="doc-noteref">7</a></sup></p>
<p>缺乏同理心与智力有关，以至于在某些地方甚至有这样一种时尚。但我不认为这两者之间有任何相关性。你可以在数学和自然科学上做得很好，而不必学习同理心，而这些领域的人们往往很聪明，所以这两种品质已经联系在一起。但也有很多愚蠢的人不擅长同理心。只要听听那些在脱口秀上打电话提问的人。他们以如此绕弯子的方式提问，以至于主持人经常不得不为他们重述问题。</p>
<p>所以，如果黑客工作像绘画和写作一样工作，它是否也一样酷？毕竟，你只有一次生命。你最好把它花在做一些伟大的事情上。</p>
<p>不幸的是，这个问题很难回答。声望总是有很大的时间滞后。这就像来自遥远星星的光。绘画现在有声望，因为人们在五百年前做的伟大的工作。当时，没有人认为这些画作像我们今天认为的那样重要。当时人们会认为费德里科·达·蒙特费尔特罗，乌尔比诺公爵，将来主要因为他在皮耶罗·德拉·弗朗切斯卡的一幅画中奇怪的鼻子而被人们记住，这似乎非常奇怪。</p>
<p>所以虽然我承认黑客工作现在似乎不像绘画那么酷，但我们应该记住，绘画本身在它的辉煌时期并不像现在看起来那么酷。</p>
<p>我们可以相当肯定地说，这些是黑客工作的辉煌日子。在大多数领域，伟大的工作都是在早期完成的。1430年到1500年间创作的画作至今仍未被超越。莎士比亚出现在职业剧院刚刚诞生的时候，他把媒介推向了如此之远，以至于此后的每个剧作家都不得不生活在他的阴影下。阿尔布雷希特·丢勒用版画做了同样的事情，简·奥斯汀用小说也做了同样的事情。</p>
<p>我们一遍又一遍地看到同样的模式。一个新的媒介出现了，人们对此非常兴奋，以至于他们在最初的几代人中就探索了它的大部分可能性。黑客工作现在似乎正处于这个阶段。</p>
<p>绘画在列奥纳多的时代并不像他的工作使它变得那样酷。黑客工作最终变得多么酷将取决于我们能用这个新媒介做什么。</p>
<p><strong>感谢：</strong></p>
<p>特雷弗·布莱克威尔、罗伯特·莫里斯、丹·吉芬和丽莎·兰德尔阅读了这篇文章的草稿，感谢亨利·莱特纳和拉里·芬克尔斯坦邀请我演讲。</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>摄影对绘画造成的最大损害可能是它杀死了最好的日常工作。历史上大多数伟大的画家都是通过画肖像来养活自己的。&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>有人告诉我微软不鼓励员工在业余时间参与开源项目。但现在这么多最好的黑客都在开源项目上工作，这项政策的主要效果可能是确保他们无法雇佣任何一流的程序员。&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>你在大学中学到的关于编程的知识就像你学到的关于书籍、衣服或约会的知识一样：你在高中时的糟糕品味。&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p>这里是一个应用同理的例子。在Viaweb，如果我们不能在两个选择之间做出决定，我们会问，我们的竞争者最恨什么？有一次，一个竞争者在他们的软件中增加了一个基本上无用的功能，但因为这是他们拥有的少数我们没有的功能之一，他们在贸易媒体中大肆宣传。我们本可以尝试解释这个功能是无用的，但我们决定如果我们自己实现它会更让我们的竞争者烦恼，所以我们那天下午就匆忙制作了我们自己的版本。&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:5">
<p>除了文本编辑器和编译器。黑客不需要同理来设计这些，因为他们自己是典型用户。&#160;<a href="#fnref:5" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:6">
<p>嗯，几乎。他们稍微超出了可用的RAM，导致很多不便的磁盘交换，但这可以通过在几个月内购买额外的磁盘驱动器来解决。&#160;<a href="#fnref:6" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:7">
<p>使程序易于阅读的方法不是用注释填充它们。我会更进一步引用阿贝尔森和萨斯曼的话。编程语言应该被设计来表达算法，只是顺便告诉计算机如何执行它们。一个好的编程语言应该比英语更适合解释软件。你只在需要警告读者一些需要临时解决方案的地方时才需要注释，就像在路上只有意外急转弯的地方才有箭头一样。&#160;<a href="#fnref:7" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></atom:encoded>
    </item>
    <item>
      <title>37signals对于服务远程客户的建议</title>
      <link>https://guaniunotes.github.io/posts/tips_for_working_with_remote_clients/</link>
      <pubDate>Sat, 29 Jun 2024 14:56:18 +0800</pubDate>
      <guid>https://guaniunotes.github.io/posts/tips_for_working_with_remote_clients/</guid>
      <description>37signals团队（ 创建了著名的Ruby on Rails 框架）这家成立于1999年，专注于ToB领域的软件公司，对于服务远程客户的一些建议，我觉得同</description>
      <atom:encoded><![CDATA[<p>37signals团队（ 创建了著名的Ruby on Rails 框架）这家成立于1999年，专注于ToB领域的软件公司，对于服务远程客户的一些建议，我觉得同样适用于独立开发者。</p>
<h3 id="1-在客户提出要求之前提供参考资料">1. 在客户提出要求之前提供参考资料。</h3>
<p>直接表明你没有什么可隐瞒的。信任是初期最难建立的东西，因此要让客户尽可能容易地了解你的人品，让他们与其他客户交谈&ndash;尤其是可能远道而来的其他客户。</p>
<h3 id="2-经常向他们展示工作">2. 经常向他们展示工作。</h3>
<p>这是消除客户自然情景焦虑的最好方法。听着，他们为你的作品付了一大笔钱，从他们把定金打给你的那一刻起，他们开始感到焦虑是完全正常的。所以，让他们看看他们付出了什么。当他们看到你的成果时，他们会对双方的关系感觉好很多。</p>
<h3 id="3-随叫随到">3. 随叫随到。</h3>
<p>由于无法面对面交流，你最好能回复电话、电子邮件、即时信息等。这是最基本的商务要求，但在远程工作时，这一点显得更加重要。这可能是不合理的，但如果你是本地人，客户往往会觉得，如果情况更糟，他们可以敲你的门。他们 &ldquo;知道你住在哪里&rdquo;。但如果你是远程办公，当电话无人接听或电子邮件不断 &ldquo;丢失 &ldquo;时，他们就会更加怀疑。保持通讯畅通，你会收获很多。</p>
<h3 id="4-让客户参与进来让他们跟着一起做">4. 让客户参与进来，让他们跟着一起做。</h3>
<p>确保他们觉得这也是他们的项目。是的，他们雇用你是看中了你的专业知识，但他们自己也有很多专业知识。在网上建立一个空间，您可以使用共享日程表，向他们展示正在进行的工作，征求他们的反馈意见，听取他们的建议，给他们分配一些任务（或者让他们给您分配一些任务）。当他们感到自己是项目的一部分时，他们的焦虑和恐惧就会被兴奋和期待所取代。</p>
]]></atom:encoded>
    </item>
    <item>
      <title>一个标准的Landing page设计结构</title>
      <link>https://guaniunotes.github.io/posts/a_standard_landing_page_structure/</link>
      <pubDate>Sun, 31 Mar 2024 09:01:13 +0800</pubDate>
      <guid>https://guaniunotes.github.io/posts/a_standard_landing_page_structure/</guid>
      <description>给大家分享一个非常标准的Landing pages设计结构： 第一部分，首屏只有三个内容：导航栏，CTA（Call To Action）引导，联系方式</description>
      <atom:encoded><![CDATA[<p>给大家分享一个非常标准的Landing pages设计结构：
<img loading="lazy" src="/img/landingpagedemo.jpeg" alt=""  />
</p>
<p>第一部分，首屏只有三个内容：导航栏，CTA（Call To Action）引导，联系方式。 把我们是作什么的，怎么做，怎么联系作为重点，让客户在第一屏就能全部阅读完。</p>
<p>第二部分，放上合作过的品牌LOGO，富有吸引力的标题，服务特色简介。</p>
<p>第三部分，高质量的客户评价。</p>
<p>第四部分，产品价格，用户权益。</p>
<p>第五部分，工作流程说明。 -</p>
<p>第六部分，常见问题解答，同时也是消除客户下单疑虑的方法。</p>
<p>第七部分，放上博客文章链接，增强SEO。</p>
<p>最后，再次放上联系方式按钮。</p>
<p>这时一般能看到最后的人，离目标客户已经不远了，不应该用“返回”按钮让他们回到页面顶部，而是将顶部的按钮复制下来，随手就能点到。</p>
<p>以上就是我认为一个标准的Landing Pages应该具备的内容框架设计。</p>
]]></atom:encoded>
    </item>
    <item>
      <title>Sora: 作为世界模拟器的视频生成模型</title>
      <link>https://guaniunotes.github.io/posts/openai-sora-creating-video/</link>
      <pubDate>Fri, 16 Feb 2024 11:51:37 +0800</pubDate>
      <guid>https://guaniunotes.github.io/posts/openai-sora-creating-video/</guid>
      <description>OpenAI于2024年2月15日发布视频生成大模型Sora，它是一种通用的视觉数据模型，可以生成跨越不同持续时间、纵横比和分辨率的视频和图像，最多可生成一整分钟的高清视频。</description>
      <atom:encoded><![CDATA[<blockquote>
<p>佛说，色即是空，空即是色。</p>
</blockquote>
<p>Open AI将他们训练的目前最大的模型取名为“Sora”（日语“天空”），就像是给普通人开启创建虚拟世界的一支“神笔”。</p>
<p>关于Sora模型的研究论文<a href="https://openai.com/research/video-generation-models-as-world-simulators">链接🔗</a></p>
<h2 id="sora的基本功能">Sora的基本功能</h2>
<ol>
<li>通过一张静态图片和提示词就可以生成视频。</li>
<li>可以向前或向后扩展视频，以产生无缝的无限循环。</li>
<li>进行视频到视频的编辑，Sora作为扩撒模型实现了多种从文本提示中编辑图像和视频的方法，能够零镜头转换输入视频的风格和环境。</li>
<li>可以连接视频，在具有完全不同主题和场景构图的视频之间创建无缝过渡。</li>
<li>可以生成图片，分辨率高达 2048x2048。</li>
</ol>
<h2 id="sora领先于其他视频生成模型的能力">Sora领先于其他视频生成模型的能力</h2>
<ol>
<li><strong>3D一致性。</strong> Sora可以生成具有动态相机运动的视频。随着摄像机的移动和旋转，人物和场景元素在三维空间中始终如一地移动。</li>
<li><strong>远距离相干性和物体持久性。</strong> Sora可以保留人、动物和物体，即使它们被遮挡或离开框架。同样，它可以在单个样本中生成同一角色的多个镜头，从而在整个视频中保持它们的外观。</li>
<li><strong>与世界互动。</strong> Sora有时可以以简单的方式模拟影响世界状态的动作。例如，画家可以在画布上留下新的笔触，这些笔触会随着时间的推移而持续存在，或者一个人可以吃汉堡并留下咬痕。</li>
<li><strong>模拟数字世界。</strong> Sora还能够模拟人工过程，例如视频游戏。Sora 可以同时通过基本策略控制 Minecraft 中的玩家，同时还可以高保真地渲染世界及其动态。</li>
</ol>
<h2 id="sora的局限性">Sora的局限性</h2>
<p>Sora 目前作为模拟器表现出许多局限性。例如，它不能准确地模拟许多基本相互作用的物理特性，比如玻璃破碎。其他交互，如吃食物，并不总是能产生物体状态的正确变化。例如在长时间样本中出现的不连贯性或物体的自发出现。</p>
<p>Sora今天所拥有的能力表明，视频模型的持续扩展是一条有前途的道路，可以开发物理和数字世界以及生活在其中的物体、动物和人的模拟器。</p>
]]></atom:encoded>
    </item>
    <item>
      <title>为什么每个人都想有自己的小生意</title>
      <link>https://guaniunotes.github.io/posts/small-business/</link>
      <pubDate>Thu, 25 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://guaniunotes.github.io/posts/small-business/</guid>
      <description>看到@xqliu在推特上提出了一个问题： 为什么今年独立开发忽然开始火起来，每个人都想要有自己的小生意？ 我认为想拥有小生意这种想法很多人老早就</description>
      <atom:encoded><![CDATA[<p>看到<a href="https://twitter.com/xqliu/status/1749689165330219344">@xqliu</a>在推特上提出了一个问题：</p>
<blockquote>
<p>为什么今年独立开发忽然开始火起来，每个人都想要有自己的小生意？</p>
</blockquote>
<p>我认为想拥有小生意这种想法很多人老早就有，只是过去没有条件实现。</p>
<p>过去，在互联网上做生意，普通人可以快速启动的项目基本上都是电子商务类，而对于数字产品则需要你有全面的开发和营销技能，就算是对程序员都存在较高的门槛。现在就不一样了，面对日益丰富的saas工具，普通人也能可以快速构建他的产品，启动自己的小生意。</p>
<p>开发者渴望摆脱传统雇佣模式的束缚，追求更大的自由度。拥有自己的小生意，意味着能够自主决定工作时间，工作地点，项目选择，客户选择，可以平衡工作与生活。还有最重要的一点，即便存在收入不稳定等不利因素，但独立开发的所有收入归个人，这是对开启自己的小生意最大的诱惑。</p>
]]></atom:encoded>
    </item>
    <item>
      <title>Hugo PaperMod主题中正确显示中文字数统计的方法</title>
      <link>https://guaniunotes.github.io/posts/papermod-wordcount/</link>
      <pubDate>Sun, 21 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://guaniunotes.github.io/posts/papermod-wordcount/</guid>
      <description>当配置完PaperMod主题后，发现文章在中文下显示的字数统计是错误的。 发现Hugo本身有个配置hascjklanguage是支持中文/日文</description>
      <atom:encoded><![CDATA[<p>当配置完PaperMod主题后，发现文章在中文下显示的字数统计是错误的。<br>
发现Hugo本身有个配置<a href="https://gohugo.io/getting-started/configuration/#hascjklanguage">hascjklanguage</a>是支持中文/日文/韩文内容显示，但默认状态下为false。因此只需在你的config.yml文件添加<strong>hasCJKLanguage: true</strong>，即可对文章中文进行统计，字数统计数值此时显示正常。</p>
<p>在config.yml 添加以下内容：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yml" data-lang="yml"><span class="line"><span class="cl"><span class="nt">languageCode</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;zh-cn&#34;</span><span class="w"> </span><span class="c"># 默认语言为中文</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">hasCJKLanguage</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w"> </span><span class="c"># 自动检测内容中的中文/日文/韩文</span><span class="w">
</span></span></span></code></pre></div>]]></atom:encoded>
    </item>
    <item>
      <title>YC联合创始人对初创公司在早期阶段的建议</title>
      <link>https://guaniunotes.github.io/posts/startups-the-very-beginning/</link>
      <pubDate>Mon, 08 Jan 2024 21:34:13 +0800</pubDate>
      <guid>https://guaniunotes.github.io/posts/startups-the-very-beginning/</guid>
      <description>创始人最重要的3个品质分别为决心、领域专业知识、销售能力</description>
      <atom:encoded><![CDATA[<p>这是Y Combinator联合创始人<strong>Jessica Livingston</strong>(杰西卡·利文斯顿)，在2020年面向女性的未来创始人大会上演讲内容的一些总结。<a href="https://foundersatwork.posthaven.com/startups-the-very-beginning">原文链接</a></p>
<h3 id="1-你要非常谨慎地选择联合创始人">1. 你要非常谨慎地选择联合创始人。</h3>
<p>他们可能应该是你已经有很好关系的人：朋友、同学、同事、配偶。与您共事过并且您知道的人是有效且可靠的。也是一个与你有大致相同抱负和道德观的人。
理想的联合创始人关系是有机的。你不应该说，“我有这个好主意，想开一家创业公司”，然后不得不四处寻找一个你不太了解的联合创始人。理想情况下，你们已经是朋友了，你们一起有了这个想法。</p>
<h3 id="2-创始人最重要的3个品质">2. 创始人最重要的3个品质</h3>
<p><strong>决心</strong><br>
最重要的品质是决心。至少要有一位创始人要有非常坚定的决心，因为创业真的很难，需要很长时间。下定决心的一部分是能够承受拒绝。人们会认为你的想法很蹩脚，客户不会感兴趣，投资者会说不，记者不会在乎。他们也可能对此不客气。但你不能让拒绝让你气馁。这对很多人来说真的很难。</p>
<p><strong>领域专业知识</strong><br>
在创始团队中，您需要的第二件事是领域专业知识。至少有一位创始人应该是你所从事的工作的专家。这意味着如果你要创办一家软件创业公司，至少应该有一个创始人是程序员。你可以雇用程序员，但如果创始人自己至少知道如何编程，即使他们不擅长编程，你更有可能成功。</p>
<p><strong>销售能力</strong><br>
创始人的第三个品质是销售能力，或者至少是愿意。必须有人成为公司的代言人——将产品推销给客户，并将公司本身推销给投资者、媒体和潜在雇员。</p>
<p>这是三个基本素质：决心、领域专业知识和销售能力。每个都应至少有一名创始人。如果你拥有这三个，理论上你可以单独行动。但即便如此，你也会发现有一个好的联合创始人更容易。</p>
<h3 id="3-做出你自己想要的东西">3. 做出你自己想要的东西</h3>
<p>确保你做出人们想要的东西的一个好方法是做出你自己想要的东西。这不是通往成功的唯一途径，但它是最安全的途径，也是最大的创业公司通常采取的途径。</p>
<h3 id="4-让用户满意">4. 让用户满意</h3>
<p>为自己做点什么只是一种启发式方法，可以指导你找到一个想法。在实际执行中，需要以用户为中心。你需要了解他们想要什么，并狂热地致力于让他们快乐。在创业的早期阶段，你保持在正确的道路上的方式是构建东西并与用户交谈。</p>
<p>衡量满意的最佳数字是收入，这是对用户是否真正喜欢你所做的事情的一个非常好的测试。</p>
<h3 id="5-花得越少越容易盈利">5. 花得越少，越容易盈利</h3>
<p>低廉的费用为你赢得时间。而且你需要的时间比你想象的要多，即使你有一个好主意，你通常也需要至少几个月的时间来解决问题。一家初创公司将致力于一个真正的好主意，但花太多钱去做，钱用完了，就不得不关闭。</p>
<h3 id="6-保持专注">6. 保持专注</h3>
<p>最成功的创始人会狂热地专注于他们的产品和用户。你应该专注现在最重要的问题是什么，你打算如何解决它？这和在大公司任职不同，当你作为雇员，你在公司解决的通常是有效的问题，但不是目前最重要的问题。
正如史蒂夫·乔布斯（Steve Jobs）的名言所说，专注就是说不。所以你选择不做什么和你选择做什么一样重要。</p>
<h3 id="7-对女性创始人的建议">7. 对女性创始人的建议</h3>
<p>不要担心自己是女性。创业公司创始人的模式不只有一种。不要让自己因为与媒体上呈现的形象不符而不敢创业。</p>
<p>如果你能做出人们想要的东西，如果你能专注于取悦用户，并衡量你在收入上取悦他们的程度，那么你就可以创办一家初创公司。这是要求自己的标准，而不是你在媒体上看到的上市公司创始人。</p>
]]></atom:encoded>
    </item>
    <item>
      <title>给信息丰富的世界设计组织</title>
      <link>https://guaniunotes.github.io/posts/designing-for-information-rich-world/</link>
      <pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://guaniunotes.github.io/posts/designing-for-information-rich-world/</guid>
      <description>在一个信息丰富的世界中，信息的丰富意味着缺乏其他东西：信息消费的任何东西的稀缺。信息消耗的东西是相当明显的：它消耗了接收者的注意力。因此，丰富的信息造成了注意力的匮乏，需要将这种注意力有效地分配给可能消耗信息的过多信息来源。</description>
      <atom:encoded><![CDATA[<h2 id="引言">引言</h2>
<blockquote>
<p>此论文收录于：M. Greenberger（编辑）中，计算机，通信和公共利益。Balt1-more，MD：约翰霍普金斯出版社，1971年。
Baltimore, MD: Johns Hopkins University Press. 1971: 37–52
作者：赫伯特·西蒙 Herbert A. Simon.</p>
</blockquote>
<p>（1969年9月至1970年5月约翰霍普金斯大学和布鲁金斯学会在华盛顿联合举办了一系列专题讨论会）</p>
<p><strong>演讲者</strong> 赫伯特·西蒙 卡内基·梅隆大学计算机科学与心理学教授</p>
<p><strong>讨论者</strong> 卡尔·多伊奇 哈佛大学政府学教授，马丁·舒比克 耶鲁大学组织经济学教授</p>
<p><strong>主持人</strong> 埃米利欧·达达里奥  美国众议院科学、研究与发展小组委员会主席</p>
<hr>
<p><strong>主持人：</strong><br>
我被这个系列的主题吸引参与，计算机、通信和公共利益的适当性。也许本次会议的标题应该是“<strong>为信息丰富、通信贫乏、问题压倒性的世界设计组织</strong>”。如果有什么特征可以描述当前时代，那就是我们技术文明的复杂问题以及它们引起的不愉快的身体和心理创伤。约翰·W·加德纳和其他社会评论家警告我们，一个国家可能因内部压力而灭亡：冷漠、不愿面对问题、无法响应人类苦难、无法适应新条件和老年能量的减弱。加德纳谈到政府中的“蜡像馆过时之物”以及工会、职业、大学和公司中的“不可逾越的利益网”。他主张“<strong>一个能够持续变化、持续更新和持续响应的社会（和机构）</strong>”。</p>
<p>我看到，面对我们社会的明显需求，致力于通信和信息处理的日益增长的社区没有任何自满的余地。今天，我们以新的方式交换越来越多的知识：通过磁带、连接到计算机的远程控制台、国家和国际信息网络以及大型数据库。扩张如此迅速，很难记录正在发生的事情。</p>
<p>我们中的许多人担心的是，我期望我们的演讲者和讨论者将部分讨论的问题。除非我们采取预防措施，否则强大的计算机化信息系统可能会在帕金森式的放任中产生新的系统，导致科学和技术信息质量低下。此外，科学只有在不受限制和开放式的情况下才能蓬勃发展。我们必须小心，不要以这样的方式制度化我们的信息系统，以至于它们抑制或干扰这种必要的自由。</p>
<p>赫伯特·西蒙是国家科学院杰出的技术评估小组的成员。我欠小组一个个人的感激之情，因为他们最近完成了一份杰出的关于技术评估的报告。</p>
<p><strong>西蒙：</strong></p>
<p>如果人们不将新酒倒入旧瓶，他们就会做出几乎同样糟糕的事情：他们赋予旧词新的意义。“工作”和“能量”是值得尊敬的英语词汇，但自工业和科学革命以来，它们获得了全新的定义。它们变得更加抽象，与人类活动的直接感知品质脱节；它们变得更加精确，以测量单位（英尺-磅，尔格）和精确的科学定律（能量守恒）表达。在当代环境中说出的“能量”这个词可能代表与18世纪说出的“能量”这个词完全不同的概念和思维过程。</p>
<p>旧词的含义不会消失；它们往往会与新的并存这是C.P. Snow所说的两种文化问题的最隐蔽部分。要知道说话者所说的“能量”是什么意思，仅仅知道他说话的世纪是不够的，还需要知道他的谈话是属于普通文化还是科学文化。如果是前者，他的话不应该被赋予后者所属的数量级精确性；如果是后者，他的话不应该被模糊或隐喻地解释。</p>
<h2 id="新含义中的旧词">新含义中的旧词</h2>
<p>所有这些都是为了提出我必须克服的困难为了传达。我打算使用熟悉的词汇，如“信息”、“思考”和“组织”，但不是用普通文化几个世纪以来赋予它们的含义。在过去的二十五年里，这些词汇开始获得新的、越来越精确和量化的含义。与信息的生成和转换相关的词汇今天正在经历与18世纪和19世纪与能量的生成和转换相关的词汇一样剧烈的变化。</p>
<p>在普通文化中，人们无法与物理学家或工程师进行20世纪的关于能量的对话。同样，与属于人文而非科学子文化的社会科学家的20世纪关于信息的对话也越来越困难。这种困难不是来自术语，而是来自隐藏在表面上共同的语言背后的完全不同的含义。</p>
<p>当我说：“机器思考”时，我的意思是什么？ “机器”这个词看起来足够明显：一台现代的电子数字计算机。但“机器”有各种各样的非预期人文叠加。在普通文化中，机器重复而单调地移动。它需要外部指导。它不灵活。只要有一个组件故障或管理不善，它就会退化成无意义或随机的行为。</p>
<p>计算机可能不会表现出这些机械特性。虽然在科学文化中保留“机器”这个词作为计算机的标签，但我大幅修改了记忆中与这个词相关的联想。当我说“机器思考”时，我并不是指那些行为重复和僵化、需要外部指导、经常变得随机的设备。
“思考”这个词本身更加麻烦。在普通文化中，它表示一组未经分析、部分直觉、部分潜意识和无意识、有时创造性的心理过程，这些过程有时使人类能够解决问题、做决策或设计某些东西。这些心理过程与计算机执行其程序时遵循的过程有什么共同之处？</p>
<p>普通文化几乎找不到它们之间的共同点。其中一个原因是，<strong>人类的思考从未被描述，只是被标记</strong>。然而，某些当代心理学研究一直在制作计算机程序，这些程序在相当详细的程度上复制了被称为思考的人类信息处理。3当一位沉浸在这种新的科学文化中的心理学家说“机器思考”时，他心中想的是受此类程序控制的计算机的行为。他的意思是一些相当明确和精确的东西，用普通文化的语言无法令人满意地翻译。如果你愿意与他交谈（你可能会！），你必须跟随他进入科学文化。</p>
<p>随着信息处理科学的不断发展，将其与主流管理活动（或人类社会活动）隔离开来将不会像将物理科学及其相关技术隔离开来那样容易。信息处理是行政活动的核心，甚至是所有社会互动的核心。越来越多地，我们发现有机会使用“信息”、“思考”、“记忆”和“决策”等术语，具有20世纪的科学精确性。科学文化的语言占据了越来越多以前保留给普通文化的领域。</p>
<p>不要误判这种语言变化的意义。它是思想和概念的变化。这是人类思考自身过程的最根本的变化。</p>
<h2 id="注意力的稀缺">注意力的稀缺</h2>
<p>我的标题谈到了“信息丰富的世界”。世界一直是信息丰富的多久了？它的繁荣有什么后果，如果是的话？</p>
<p>去年复活节，我的邻居给他们的女儿买了一对兔子。无论是有意还是无意，一个是雄性，一个是雌性，现在我们生活在一个兔子丰富的世界中。不喜欢兔子的人甚至可能将其描述为兔子过剩的世界。一个世界是兔子丰富还是贫穷是相对的。由于食物对于生物种群是必不可少的，我们可以通过将兔子的数量与兔子可食用的生菜和草（和花园花卉）的数量相关来判断世界是兔子丰富还是兔子贫穷。兔子丰富的世界是生菜贫穷的世界，反之亦然。</p>
<p>人口问题的反面是稀缺问题，因此是资源分配问题。只有那么多生菜可以分配，它必须以某种方式在兔子之间分配。同样，<strong>在信息丰富的世界中，信息的财富意味着其他东西的匮乏：信息消耗的东西的稀缺。信息消耗的相当明显：消耗了接收者的注意力。因此，信息的丰富创造了注意力的贫困并需要在可能消耗它的过多信息来源之间有效地分配这种注意力</strong>。</p>
<p>为了正确制定分配问题，必须找到测量稀缺资源数量的方法；这些数量不得随意扩大。到目前为止，我们所有人都听说过比特，这是香农在通信系统设计问题中引入的一种信息单位。我们可以用比特来衡量信息处理系统的注意力容量吗？
不幸的是，这不是正确的单位。大致上，问题在于任何设备（或人）接收信息的比特容量完全取决于信息的编码方式。比特容量不是不变的，因此不适合衡量注意力的稀缺性。</p>
<p>相对直接的衡量信息消耗的稀缺资源的方法是注意接收者在信息上花费的时间。人类，就像现代计算机一样，本质上是串行设备。他们一次只能关注一件事。这另一种说法是注意力是稀缺的。即使是约翰·凯门尼描述的现代时分共享系统，也实际上只是在做一件事，尽管它们似乎能够同时关注一百件事。5它们通过在这些一百件事之间共享时间和注意力来实现这种幻觉。我为人类提出的注意力容量衡量标准也适用于时分共享系统，以及作为时分共享系统的大型组织，可以看作是一个时分共享系统。</p>
<p><strong>在信息丰富的世界中，注意力的稀缺可以用以人类行政人员的时间为单位来衡量</strong>。如果我们想要精确，我们可以定义一个标准行政人员（智商120，学士学位等），并要求刘易斯·布兰斯康布在国家标准局对他进行腌制。此外，我们可以计算人类行政人员的注意力单位与各种类型的计算机之间的大致转换。</p>
<p><strong>在信息丰富的世界中，信息的大部分成本是由接收者承担的</strong>。仅仅知道生产和传输信息的成本是不够的；我们还必须知道以稀缺注意力为单位接收它的成本是多少。我曾试图通过建议我的朋友们重新计算《纽约时报》（或《华盛顿邮报》）对他们的成本，包括阅读它的成本，来向他们传达这个论点。这种计算通常会让他们感到一些警觉，但还不足以让他们取消订阅。也许好处仍然大于成本。</p>
<p>在解释了我所说的信息丰富的含义后，我现在准备解决主要问题。我们如何设计组织、企业公司和政府机构在这样一个世界中有效运作？我们如何安排节约和有效分配他们稀缺的注意力？</p>
<p>我将在三个例子的帮助下进行，每个例子都说明了组织设计问题的主要方面。我不试图涵盖所有重要的问题领域，而且我假设的组织与华盛顿特区的实际组织，无论是活着的还是死了的，都没有相似之处，这是偶然的、偶然的，是纯粹的偶然事件的产物。</p>
<h2 id="信息过载">信息过载</h2>
<p>许多消除信息过载的提议（另一种描述信息丰富生活的方式）呼吁新的计算系统。有一个很好的先例。霍勒里斯打孔卡是人口普查局首次面对信息过载时的创造性产物，电话公司中心交易所的一系列危机导致了自动交换系统的发明。</p>
<p>今天，一些人认为，除非找到自动化排序操作的方法，否则邮政服务注定会因信息过载而崩溃。这不可能。没有理由邮件排序成本会与邮件量成比例增加，也没有理由单位成本会随体积增加而上升。问题的一个大原因是某些信息处理服务几乎是免费的，导致对它们的需求爆炸性增长。邮局并没有真正准备好提供这种隐性补贴，并通过糟糕地执行服务、资源不足来违约。邮局的危机并不需要计算机；它需要彻底应用价格和市场机制。</p>
<p>这并不是说任何特定的手动邮局操作，例如排序，不能通过计算机变得更加经济。这种技术问题在合理的误差和辩论范围内通过成本效益分析来解决。但是，没有任何神奇的自动化能够解决组织不愿意或无法分配和定价稀缺信息处理资源所提出的困境，无论资源是排序员还是电子设备。免费或定价过低的资源总是极度短缺。邮局所谓的技术滞后实际上是神经失败。</p>
<p>计算机是一种具有相当普遍能力的信息系统。它可以接收信息、存储它、以多种方式操作它，并将它传输到其他系统。计算机是否会有助于解决信息过载问题，或者反而加剧问题，取决于它自身注意力在四类活动之间的分配：<strong>听、存储、思考和说话</strong>。一个通用的设计原则可以如下表述：</p>
<p><em>一个信息处理子系统（计算机或新的组织单元）只有在接受的信息多于它之前其他人接收的信息时，才能减少对组织其余部分注意力的净需求，也就是说，如果它听和思考的时间比说话的时间多，它就是一个注意力的节约者。</em></p>
<p>为了使一个组织节约注意力，一个信息处理系统（简称IPS）必须是一个信息压缩器。通常，设计IPS的起点是考虑它将提供的信息。然而，在一个信息丰富的世界中，这样做是本末倒置的。关键问题在于它能允许多少信息不被系统的其他部分注意到。</p>
<p>基本上，IPS可以通过两种方式执行节约注意力的功能：</p>
<ul>
<li>（1）它可以接收并存储本应由其他系统接收的信息。</li>
<li>（2）它可以将输入信息转换或过滤为输出，要求的注意力时间比输入少。</li>
</ul>
<p>为了说明这两种节约注意力的模式，让我谈谈一个国家外交部的一些信息需求。（由于美国有一个国务院而不是外交部，我显然是在谈论另一个国家。）大部分从环境中进入系统的信息在进入时与行动无关。其中很多永远不会相关，但我们事先无法确定哪部分是相关的。</p>
<p>节约外交部注意力的一种方法是在环境和组织之间设置一个IPS（人类、自动化或两者兼有），在接收时对信息进行索引和存储。另一种方法是让IPS分析、推断并总结接收到的信息，然后索引并存储其分析产品供系统的其他部分使用。</p>
<p>这个提议听起来很熟悉。我只是用非传统语言描述了一个传统情报单位的传统功能。此外，我通过增加信息处理器简单地解决了信息过载问题。我通过增加稀缺资源的供应消除了稀缺性。任何有钱的傻瓜都能做到这一点。</p>
<p>但我的解决方案的平凡性携带着一个重要的教训。IPS必须具备的功能设计来节约注意力，在很大程度上与具体的硬件无关，无论是自动化的还是人类的。只有在经济考虑中，硬件才会成为关注的问题。</p>
<p>然而，我的提议实际上远不如听起来那么传统。如果IPS要部分自动化，我们必须提供精确的描述（用科学文化的语言）来表示像“分析”和“总结”这样的模糊术语所指的过程。即使我们不打算自动化这个过程，新的信息处理技术仍然将允许我们以精确的方式制定人类分析师和总结者的程序，以便我们可以可靠地预测输入和输出之间的关系。更仔细地看IPS的结构和操作，我们会发现它实际上与传统的情报单位相去甚远。（我对这个问题的思考从过去几年对美国国务院信息处理需求的分析中获益匪浅。这些规划活动值得称赞地没有过早沉迷于自动化硬件。）</p>
<p>我提出的情报IPS的目的不是为了向外交部提供信息，而是为了使其免受信息过于丰富的环境的影响。信息并不一定要被关注（现在）仅仅因为它存在于环境中。设计一个情报系统意味着决定：<strong>何时收集信息</strong>（如果我们现在不想收获，大部分信息将在环境中无限期保存）；<strong>在哪里</strong>以及以<strong>何种形式存储它</strong>；如何重新加工和压缩它；如何对其进行索引和提供访问；以及何时以及在谁的倡议下将其传达给其他人。</p>
<p>关注资源稀缺且必须被保留的设计原则与“信息越多越好”的原则截然不同。上述外交部几年前认为自己遇到了一次通信危机。当世界事件发生得活跃时，携带传入电报的电传打字机经常跟不上。解决方案是：用容量更大的行式打印机替换电传打字机。显然没有人问过，接收和处理电传打字机消息的IPS（包括外交部长）是否准备好、愿意并能够处理来自行式打印机的更大容量的消息。</p>
<p>我关于情报系统所说的一切都特别适用于管理信息系统。管理信息系统的适当目标不是为经理提供他所需的所有信息，而是重新组织经理的信息环境，以减少他必须花费接收信息的时间。以这种方式重新陈述问题会导致非常不同的系统设计。</p>
<h2 id="知识需求">知识需求</h2>
<p>这就引出了知识需求的问题。<strong>我们如何决定在信息丰富的世界中信息应该存储在哪里，谁应该了解它？</strong></p>
<p>我们这些在大萧条时期长大的人有时很难适应富裕社会。当我们吃土豆时，我们总是吃皮（我母亲坚称这是土豆的最好部分）。不可回收的容器对我们来说似乎是难以忍受的浪费象征。</p>
<p>我们对信息的态度反映了贫困文化。我们是在亚伯拉罕·林肯步行数英里借书（并归还！）并在火光下阅读的故事中长大的。我们大多数人在宪法上无法将装订书投入垃圾箱。我们处理杂志和报纸已经够困难的了。我们中的一些人对知识的需求如此着迷，以至于我们感到被迫阅读落入手中的一切，尽管邮件的激增正在帮助我们摆脱这种痴迷。</p>
<p>如果这些态度在泥板、抄写员和人类记忆的世界中具有高度功能；如果它们在印刷机和电缆的世界中至少是可以接受的；它们完全不适应广播系统和复印机的世界。</p>
<p>信息处理技术的变化要求对熟悉的动词“知道”所附加的含义进行根本性改变。在普通文化中，“知道”意味着以一种便于在适当时候回忆的方式存储在一个人的记忆中。通过隐喻扩展，“知道”可能包括拥有访问包含信息的文件或书籍的能力，以及使用它的技能。在科学文化中，“知道”的整个重点从存储或实际拥有信息转移到使用或访问它的过程。有可能存储信息而没有访问它（舌尖上的名字，文件中的丢失信件，未索引的书，未编目的图书馆）；也有可能访问信息而没有存储它（计算正弦函数值的计算机程序，测量患者体温的温度计）。</p>
<p>如果一个图书馆有两本相同的书，其中一本可以被摧毁或交换，而不会使系统失去信息。在香农的信息理论中，多份副本使图书馆变得多余。但副本只是信息中三种重要形式的冗余之一。即使一个图书馆只有一本每本书的副本，它仍然具有高度的信息重叠。如果国会图书馆的一半标题被随机销毁，世界上的知识几乎不会消失。</p>
<p>最重要的、微妙的形式的冗余来自于世界高度法制化。如果事实没有任何部分可以从其他部分预测，即它们彼此独立，那么事实就是随机的。如果某些事实可以从其他事实预测，那么事实就是有法可依的。我们只需要存储所需的一小部分就可以预测其余的。</p>
<p><strong>这正是科学的本质：用整洁的有序关系陈述替换无序的残酷事实，从而推断出这些事实</strong>。科学的进步，远非用新信息填满世界，而是通过发现已经存储的信息的有序性，极大地增加了图书馆的冗余。随着每一个重要的科学理论的进步，我们可以减少明确存储的知识量，而不会失去任何信息。我们很少利用这个机会，并不否认这个机会的存在。</p>
<p>让我讲述一个轶事，很好地说明了这一点。我们都知道存在一个DDT（杀虫剂）问题。DDT是技术的混合祝福之一。它对有害昆虫非常致命，但对鹰、游钓鱼和可能我们自己来说却难以忍受地持久和累积性有害。</p>
<p>实际问题是如何在不承受其持久性后果的情况下，享受DDT毒性带来的农业和医学利益。我认识的一位杰出化学家，他既不是杀虫剂专家也不是生物化学专家，向自己提出了这个问题。他能够通过解码其名称来写下DDT的大致化学结构。他可以从一般理论原则中识别结构公式中解释其毒性的成分自由基。公式还告诉他，从理论角度来看，这种物质为什么持久，为什么分子不容易或快速分解。他再次从理论角度出发，询问哪种化合物具有DDT的毒性，但容易分解。他能够写下它的公式，并认为没有理论原因不能轻易生产出来。（所有这些都花了十分钟。）</p>
<p>给该领域的专家打电话证实了他所有的推测。他“发明”的新化合物是一种众所周知的杀虫剂，在DDT之前就已经商业可用。它不像DDT那样对广泛的生物具有致命性，但几乎如此，而且分解相当容易。我不知道这种新旧化学物质是否“解决了”DDT问题。DDT的持久性是其发明者故意设计的，以避免频繁重新喷涂并降低处理成本。可能还有其他经济问题，甚至化学和生物问题。</p>
<p>这个故事说明，<strong>良好的问题解决能力结合强大的（但紧凑的）理论（偶尔打电话）可以取代书架上大量的参考书籍</strong>。通常，让信息留在自然的图书馆中，在需要时通过实验或观察提取，可能比在人类的图书馆中挖掘和储存它更有效率，后者的检索成本可能与从新的实验中重新创造信息或从理论中推导信息的成本一样高。</p>
<p>这些考虑减少了我对使用新技术存储和检索越来越大量的数据的热情。我并不是要表达对所有旨在提高世界信息存储的提议的全面不赞成。但我相信我们必须设计具有数据分析能力的IPS，以跟上我们存储大量数据的倾向。</p>
<p>今天的计算机是愚蠢的机器人，只要编程保持在目前原始状态，它们就会继续是如此。愚蠢的机器人可以吸收、存储和喷出大量信息。他们不会，也不能，对这些信息接收者的稀缺注意力给予应有的尊重。计算机必须被教会以更高的智能水平行事。这需要大规模、有力的研究和开发工作。</p>
<p>在知识丰富的世界中，进步不在于更快地阅读和编写信息或存储更多的信息。进步在于提取和利用世界的模式，以便远少的信息需要被阅读、编写或存储。进步取决于我们为人类和机器设计更好、更强大的思考程序的能力。</p>
<h2 id="技术评估">技术评估</h2>
<p>注意力在组织中通常是稀缺的，特别是在顶层，在美国政府这个被称为组织的顶层更是稀缺。只有一位总统。尽管他得到了预算局、科学与技术办公室和其他行政办公室的协助，但一个令人生畏的事务阵列汇聚在这个单一的、串行的、人类信息处理系统上。</p>
<p>美国只有一个国会。它可以通过委员会并行运作，但每个重要事项都必须占据许多国会议员的注意力。非常重要的事情可能会占据所有人的时间和注意力。</p>
<p>美国只有一个公民群体。大型公共问题，如越南战争、民权、学生骚乱、城市和环境质量（仅举当前议程前五位）定期需要公众注意力的同步。这足以使议程变得难以操作或不采取行动。</p>
<p>国会议员达达里奥近年来一直致力于改进社会和政府处理我们大量生产的新技术的程序。在他的众议院科学、研究和发展小组委员会的要求下，我所在的国家科学院的一个小组最近准备了他所提到的技术评估报告。</p>
<p>技术评估不仅仅是确定新技术发展的可能好坏影响。更不是在新技术获得许可之前确保它不会产生不良影响。在我们行动之前思考一切，确保我们拥有所有事实并了解所有后果的梦想，是一个病态的哈姆雷特的梦想。这是一个对因果关系的无缝网络、人类思维的局限性或人类注意力的稀缺性没有认识的人的梦想。</p>
<p><strong>世界本身就是最大的知识库</strong>。人类理性，借助自然的模式和冗余，可以预测人类行动的一些后果。但世界仍将是最大的实验室，最大的信息库，我们将从中学习我们所做之事的结果，无论是好是坏。当然，从经验中学习是昂贵的；但通过研究和分析来预测经验，成本也很高，而且通常不那么可靠。</p>
<p>技术评估是一个情报功能。如果它完美运作，它将为我们做两件事。首先，在我们采取行动之前，它会警告我们可能来自提议创新的真正危险（特别是不可逆转的危险）后果。其次，它会在我们能够看到创新的未预料后果之前，给我们提供早期警告，以免造成重大的不可逆转损害。在执行这两个功能时，技术评估将牢记注意力的宝贵稀缺性。它只会将需要关注和行动的事项列入议程（包括收集信息以评估是否需要进一步关注的行为）。</p>
<p>一个像“技术评估”这样的短语唤起了科学能力和客观性、审慎和周到、关心长远以及考虑所有方面和后果的系统观的形象。但这些决策系统的可取品质不能在不考虑系统的组织和政治环境的情况下强加。</p>
<p>随着我们的科学和工程知识的增长，我们行动的力量也在增长。它们对广阔的空间和时间产生了影响。知识的成长使我们能够认识到我们以前可能无知或忽视的后果。我们能够产生更大的波动，同时也拥有更敏感的仪器来检测船的摇晃。今天，我们对往返于地球和月球之间的一切都进行消毒和检疫。不到五百年前，我们在愉快无知的情况下将肺结核、天花和梅毒传播到整个美洲大陆。</p>
<p>要求考虑所有影响的命令让人想起一个无限延伸到空间和时间的积分，永远不会收敛。我们必须像人类一直做的那样假设，对我们有限的注意力和思考能力的合理分配将至少与新问题的出现速度一样快地解决我们面临的关键问题。如果这个假设是错误的，那我们就没有希望了。如果是正确的，那么技术评估就成为为社会和政府设定议程任务的一部分。</p>
<p>为了将技术评估的概念从抽象的领域中带出来，让我回到DDT的例子。尽管我没有研究DDT的历史，但我相信它是在没有对其在大气中和生物体中（特别是捕食者）潜在累积危险的彻底（或至少足够）研究的情况下大规模引入的。它因其农业和医学效益而被誉为技术的奇迹之一。现在，几十年后，我们了解到这个奇迹有一个缺陷。</p>
<p>DDT可能的不良影响已经有一段时间为专家们所知。它们可能甚至在DDT引入时就已经为人所知，但被忽视了。如果是这样，这将强调我关于注意力稀缺性的基本主题。</p>
<p>假设DDT的危险事先并不知道，而是在自然的实验室中发现的。那么，对于鹰爱好者来说，我要道歉，我不确定我们（甚至鹰）是否因为让实际使用告诉我们关于DDT的情况，而不是试图提前预测这种经验而遭受了不可原谅或不可逆转的损失。</p>
<p>技术评估已经在（并正在）被环境所做出。我们正在从环境中获得信号，这些信号引起了我们对其一些发现的关注，这些信号足够强烈，值得并确实引起了我们的注意。DDT问题已经在过去几个月中间歇性地引起了关注，最响亮的环境信号是在五大湖游戏鱼中检测到。这个DDT问题现在已经上升到报纸、法院和委员会议程的足够高的位置，以引发行动。</p>
<p>我知道这听起来可能很自满，我真的并不感到自满。但是，对于每个可以通过事后看来本可以避免的公共问题，我们没有任何有用的社会目的去感到痛苦和手忙脚乱。现在我们知道了问题，我们应该解决它们，而不是追究谁本应该早点看到问题的责任。</p>
<p>我们关于DDT的影响和长期持续的扩散污染的信息在许多方面都是不令人满意的。（就像我们对几乎任何公共政策问题的信息一样。）但这并不意味着我们可以通过大量收集数据来改善这种情况。<strong>相反，我们主要需要的是精心设计、高质量的生物学调查，研究DDT扩散和代谢背后的因果机制</strong>。在我们更好地理解问题的化学和生物学之后，我们可能会对大量数据有意义，但那时我们可能不需要那么多。</p>
<p>能够进行所需研究的一流生物学家和化学家与其他高质量的信息处理系统一样稀缺。他们的注意力是一种非常稀缺的商品，我们很快就不太可能获得太多。实际问题，一如既往，是如何在我们现在拥有的零碎、不充分的数据的情况下处理这种情况。</p>
<p>我们开始提出这样的问题：假设DDT有害影响的最坏情况，从人类、经济和生态角度来看，这些影响的程度有多大，这些影响在多大程度上是不可逆转的？同样地，如果没有DDT，我们将付出什么代价？下一个最好的替代品是什么？</p>
<p>这些都是常识问题。我们不需要了解任何技术就能提出这些问题，尽管我们可能从答案中学到一些关于技术的知识。获取答案的最有效IPS包括一部电话、一台Xerox复印机（复制电话联系人建议的文件）和一些非常聪明的专业人士（不一定是专家），他们确实了解一些关于技术的知识。通过这个检索系统，现在世界上已知的关于这个问题的几乎所有内容都可以在几周的人工工作中提取出来。（如果举行听证会和简报会或组织一个研究项目，所需时间会大大增加。）</p>
<p>在联邦政府内外有许多地方可以提出这些问题。它们可以由科学技术办公室、国家科学院、国家工程院、RAND公司、未来资源或国会委员会提出。（最后一个优秀的例子是关于蒸汽动力汽车的最近一系列报告。）</p>
<p>调查小组的位置从只有一个方面来看是重要的，这可能是至关重要的。小组的位置可以决定它所获得的关注程度以及其发现的合法性。这些都是相互依赖但并不完全相同的问题。</p>
<p>合法性有时可以通过科学的常规证书获得（正确的学位、专业职位和声誉）。但许多无懈可击的报告被忽视了，许多没有适当证书的报告却获得了议程上的高位。拉尔夫·纳德这样的人证明，强有力的写作和演讲、理解大众媒体以及通常对事实的正确判断可以弥补缺少工会卡和缺乏进入组织渠道的机会。瑞秋·卡森表明，即使是文学优秀有时也足以扭转局面。</p>
<p>我同意达达里奥国会议员的观点，我们可以并且应该加强和使我们国家的技术评估过程更加有效。我们仍然需要世界本身作为一个主要的实验室，但我们可以适度地用预见代替后见。我们是否必须等到整个洛杉矶都在哭泣才采取行动解决汽车尾气问题？资金充足的技术评估机构应该每年花费一亿美元而不是一千万美元，以查明蒸汽汽车是否为烟雾问题提供了长期的解决方案。我们目前的措施充其量只是权宜之计。</p>
<p>加强技术评估意味着改进我们制定公共议程的程序。这并不意味着给已经负担过重的总统、国会和公众施加更多的信息和问题。在信息丰富的世界中，过早的预警并没有什么特别的美德。让我们让世界为我们存储信息，直到我们可以集中注意力和思考它。</p>
<h2 id="评估信息处理技术">评估信息处理技术</h2>
<p>我想讨论的最后一个问题本身就是技术评估中的一个问题。信息处理的科学和技术仅有四分之一世纪的历史，我们对于它在另一个四分之一世纪后将会是什么样子仅有最微弱的预感。我们应该如何评估它，并确保它以对社会有益的方式发展呢？</p>
<p>技术最显著且表面上最壮观的部分是其硬件：计算机、打字员控制台、阴极射线管和相关的小玩意。这些设备为我们提供了强大的新方法，用于记录、存储、处理和编写信息，以改善和取代我们历史上一直使用的人类IPS。</p>
<p>然而，<strong>硬件本身并不能解决任何组织问题，包括注意力稀缺问题</strong>。只有当我们开始足够了解信息处理系统，以便为其设计复杂的程序时，硬件盒子才会开始对这些问题产生影响——这些程序将使它们能够至少像人类一样思考。</p>
<p>我们对自动化IPS的每一次进步，也会增加我们对人类IPS、对人类思维过程的复杂性和科学知识的了解。我们通过新技术获得的是具有深远意义的东西——<strong>一门关于人类思维和组织的科学</strong>。</p>
<p>空想对于理解这种新技术来说，并不比对于以前的技术更有效。如果我们想要理解信息处理，我们必须在自然的实验室中研究它。我们必须构建、编程和操作各种类型的信息处理系统，以观察它们的运作和表现。</p>
<p>我们的第一批系统以各种意想不到的方式（其中大多数是愚蠢的）运作，并且通过事后看来，它们似乎非常原始。它们永远不会根据其操作性能通过成本效益测试，我们将不得不将它们作为研究和开发工作而注销。从它们的行为中，我们可能会了解到新技术既包含危险也包含承诺。对新技术可能带来的隐私威胁已经引起了相当大的关注。在这些关注在广泛的经验基础上得到测试之前，这些担忧仅仅是空想上的推测。</p>
<p>早在计算机时代初期，我建议一些企业在确切了解如何使用和支付计算机之前不要购买计算机。我很快意识到这是一条糟糕的建议。计算机最初通过教育大量人员了解计算机来证明自己的价值。它们是取代模糊、不充分的通用文化词汇，用信息处理词汇中这些词汇在未来必须拥有的清晰、丰富的科学意义的主要力量。</p>
<p>我认为这指向了一个明确的公共政策，用于理解和评估新技术。我们需要大大增加对各种类型的研究和开发工作的支持。它们当然应该包括约翰·凯门尼设想的那种网络实验。它们应该包括数据库实验。最重要的是，它们应该包括机器人技术、大规模记忆组织和人工智能的实验，从而为信息处理科学奠定基础。</p>
<p>过去的经验表明，按照我所指出的实验精神进行的项目会产生有价值的副产品。列表处理是计算机编程语言的一种深奥发展，大约在十五年前最初是由人工智能的纯研究兴趣推动的。今天，它的概念已经深深地嵌入到大型编程和操作系统的设计中，这些系统经常用于会计和工程计算。</p>
<p>探索月球是一项伟大的冒险。在月球之后，还有更远的太空物体。但人类的内心空间，他的思维，比行星的空间还未知。现在是时候建立一个国家政策，系统地探索这个内在空间，设定目标、时间表和预算。如果我说其中的一个目标是到1975年实现世界象棋冠军的计算机程序；另一个目标是到1980年使一个人学习一门困难的学校科目（如外语或算术）的速度提高一个数量级，你会认为我异想天开或不切实际吗？</p>
<p>如果我们愿意致力于这种国家目标（如果你不喜欢我的两个目标，可以替换为你自己的），为它们设定期限，并将资源投入其中（就像我们已经为探索外太空投入资源一样），我认为我们很快就会对所谓的计算机信息处理器和人类信息处理器有所了解。这种理解将使我们能够在未来比以往任何时候都更有效地建立组织。</p>
<hr>
<h2 id="小组讨论">小组讨论</h2>
<p><strong>德奇</strong>：<br>
演讲者给我们提供了一个他自己的好信息处理程序的例子。他的讲话代表了一种程序，它不会立即产生所有答案，而是启动了一个最终可能产生答案的过程。他通过给我们一些他重要而深刻思想的极其简化的版本来实现这一点。但它们似乎在两个方面过于简单。</p>
<p>西蒙建议，通过更好的定价政策可以缓解信息过载。我认为他暗示，当任何东西免费提供时，对它的需求就会变得无限。我不知道他的办公室的饮水机旁发生了什么，但我对在洛杉矶更富裕的公民中出售饮水许可证和呼吸氧气执照的愿景感到恐惧！社会科学家，包括西蒙在内，都知道价格机制既不是分配商品的唯一方式，也不是最佳方式。当商品的供应远远超过需求时，需求不会自动增长到无限。它可能会增加，但增长的速度是一个实证事实，而且不必非常快。</p>
<p>第二个让我更加不安的概念，即使出于专业原因，是西蒙向我们提出了一种“<strong>尝试看看</strong>”类型的普遍知识理论。他显然是在考虑计算机时建议我们不要过于担心可能的损害，而是进行实验，看看会发生什么。如果事情有点不对劲，我们将从损害中学习。毕竟，即使在最初应用的几十年里，DDT可能也做了更多的好事。</p>
<p>我不了解DDT或生态学，所以无法对此发表意见。但我的一个特别兴趣是国际政治研究，当我将西蒙的建议转化为这个领域时，我感到不安。我们在那里发展了许多对遥远国家和陌生民族的利益，以及据称足够的方法来收集和评估关于他们的信息。我们认为我们在最广泛的意义上拥有一个充分的政治情报系统，无论是军事还是民用，也许是因为我们对一项技术的迷恋，这项技术允许更快地传输错误的估计和更快地运输被误导的官员。我们的政府根据它认为是关于东南亚的信息采取了行动。我们向那里派遣了五十万人，回来的还有更多信息；还有四万个装在塑料袋里的尸体。</p>
<p>在外交政策方面，至少，我应该警告那种老式的实用主义方法，即“让我们进去试试看会发生什么。”我太容易记住一个男人从帝国大厦顶部掉下来，在经过二楼时说，“根据实用主义原则，到目前为止一切都进行得很好。”</p>
<p>为了使这个案例更普遍，如果涉及的权力相对较小，那么忽视早期警告或不进行预测可能造成的损害是有限的。操作的权力越大，为了避免致命损害，就越需要有远见。汽车越快，它的前灯就必须照射得越远。</p>
<p>随着现代技术变得越来越强大，我们需要我同事约翰·普拉特所称的预见性或危机研究：确定当前问题可能达到临界质量的点。我认为西蒙本人是非常有可能为这项工作做出贡献的人，但在快速和通俗讲话的压力下，他有可能给人一种愉快的实用主义印象，告诉所有的“胆小鬼”不用担心。政治科学家不会同意。</p>
<p>在批评之后，让我说我对西蒙论文中我认为做出的重要知识贡献感到多么高兴。我认为有四个主要贡献：</p>
<ol>
<li><strong>注意力经济本身被置于分析的焦点</strong>；</li>
<li><strong>注意力经济被提议作为大型组织的设计理念</strong>；</li>
<li><strong>知识被定义为获取信息的途径，或其检索的过程，而不是其存储</strong>；</li>
<li><strong>强调产生信息重创程序，这些程序的单位和操作规则在经济上数量较少，可以比存储和检索信息本身更便宜、更快地重新生成信息</strong>。</li>
</ol>
<p>西蒙向我们提出了注意力过载的问题。世界人口每35到40年翻倍。由于这些人中的大多数希望被听到，信息将与人口成比例增加。西蒙说，这是它将增加的全部。我恭敬地表示不同意。</p>
<p>世界人口的人均收入每年增长2%，随着他们变得更富有，他们在涉及信息的服务上的支出也更多。因此，总的信息负载不是随着人口每年增长2%，而是随着收入每年增长4到5%。也就是说，大约每18年翻一番。此外，在过去的四分之一世纪中，美国劳动力中几乎有1%的人从生产线劳动或物料处理转向了知识处理或符号操作职业。</p>
<p>我最近看到了一条曲线，讲述了捷克斯洛伐克从1929年到1965年的同样故事。这条曲线显示，转变为共产主义政权似乎对这一趋势没有丝毫影响。在共产主义下，无产阶级向文件处理者的转变与其他地方一样！知识处理的趋势一直在增加。</p>
<p>最后，在过去的四分之一世纪中，大约每四到五年就会突破一个临界门槛，要求新的思考。例子包括核能、电视的大众文化、星际交通、月球上的足迹、大学从精英到大众机构的转变等等。</p>
<p>由于这些原因，未来将会有更多的信息过载，而不是过去。信息压力至少会在我估计的每12到15年翻一番。</p>
<p>当然，有各种应对过载的方法：</p>
<ol>
<li>跳过；</li>
<li>延迟或形成等待队列；</li>
<li>分块，或批量做事情；</li>
<li>以粗略的方式或快速做事情，并接受大量的错误；</li>
<li>（西蒙偏爱的方法）过滤或减少信息。</li>
</ol>
<p>再次在我的领域，我对过滤的结果感到害怕。林登·贝恩斯·约翰逊是这个国家曾经拥有的最好的首席执行官之一。他有秘书、白宫工作人员和一个环境，非常仔细地给他提供了基本上一种类型的信息。当像乔治·鲍尔这样的人有时被赋予充当魔鬼的代言人的不愉快任务时，魔鬼得到的黄金时间相对较少，而且几乎没有支持！</p>
<p>如果我们的主要关注点是让高管免于查看太多不喜欢的信息，我们在应对我们的城市、穷人、种族、国际政治、军备控制、退伍军人系统等问题时将面临失败的巨大风险。不喜欢的信息可能是至关重要的信息。</p>
<p>这就引出了过滤器设计的问题。你如何制作一个足够智能的过滤器，以了解应该让什么通过，什么应该筛选掉？我所知道的唯一方法是分析“注意力”所涉及的操作。有六个：</p>
<ol>
<li>粗略地识别应该关注的目标，例如不熟悉的事物、陌生人或不符合的事物；</li>
<li>跟踪注意力的对象，并保持关注；</li>
<li>解释对象并询问它类似于什么；</li>
<li>决定对对象的最合适的响应，以及应该采取什么行动；</li>
<li>执行响应；</li>
<li>接受反馈，并从响应的结果中学习，判断它是否正确，以及未来的响应应如何进行修正。</li>
</ol>
<p>所有六个环节都是必需的，但这意味着我们不能在不将部分记忆委托给它们的情况下构建良好的过滤器。没有记忆的过滤器是原始的过滤器。委托记忆意味着分散决策能力，并接受通过构建更多能力而产生的一些冗余，从而增加总体库存。我们必须询问过滤响应的错误成本是否大于构建更多响应能力的成本。未来的信息处理模式可能不是单枢纽的星形或轮形，而是网络，负载可以从一个节点转移到另一个节点。</p>
<p>我想以三个小的展望来结束。</p>
<ol>
<li>
<p>由于向知识生产职业的转变，发达国家的人类未来将变得更加知识化，而不是减少。在本世纪初，美国有八分之一的人口从事知识生产工作。现在是三分之一，到本世纪末，将会超过一半。对于国民收入来说也是如此，考虑到当前的趋势，它也将以越来越大的比例分配给信息处理。</p>
</li>
<li>
<p>我们需要更多的创新。我们不可能继续进行许多过去的工业或政治实践，而不遇到收益递减。答案是改变生产函数，找到新的方法来绕过旧的、关键的瓶颈。
在未来几十年中，创造力将成为文明生死存亡的问题。</p>
</li>
<li>
<p>将非常需要分散化、更短的反馈、更快的周转时间和分散的记忆与自然之间更好的匹配。我认为一个知识化、创新、更加分散的未来即将到来。我们将迫切需要计算机的贡献，更重要的是，像西蒙这样富有创造力的人类学者的贡献。</p>
</li>
</ol>
<p><strong>西蒙</strong>：<br>
德奇教授可以不同意我，但这并不意味着我必须不同意他！而且，我真的很少有几件事想与他不同意。</p>
<p>我会承认夸张。我会愉快地承认愉快的实用主义。坦白说，我认为我们现在的国家可以多用一些这种东西。</p>
<p>不详细阐述我的理由，我会对德奇的例子提出异议。然而，无论我们如何诊断我们在越南的失败，我发现很难将它们解释为技术评估的失败。这对我来说是一个非常奇特的诊断。</p>
<p>关于过滤，我认为我们可以朝着适当的分散化迈进，并部分并行运作，但我们仍然需要一些串行和同步操作，我们需要询问如何进行过滤。站在决策系统顶端的人如何接收到关于他们必须做出的决策的适当过滤的考虑范围？我们所做的任何事情都不会改变美国政府的组织结构，使其有七个总统而不是一个。我们必须找到方法，让那一位总统尽可能聪明地根据可获得的最佳信息运作。</p>
<p><strong>舒比克</strong>：<br>
在刘易斯·卡罗尔的《寻找斯纳克》中，领航员（他是中心人物）说：“我说了三遍的话是真的。”尽管赫伯特·西蒙三次说人是一种一次、顺序、数据处理动物，但我认为这个问题仍然悬而未决。事实上，我提供一个温和的反驳证据，就在我听西蒙讨论“知道”这个词的含义时，我注意到观众中有两个杰出的旧约专家也在讨论“知道”这个词的含义。</p>
<p>我的评论，可以称之为“如何成为数据丰富但信息贫乏，或者让我们用事实埋葬自己”的主题变体，可能包括以下三个引用：</p>
<ol>
<li>“不要拿事实来混淆我。我已经决定了。”</li>
<li>“重要的不是你知道你认识谁。”</li>
<li>“为什么我应该读他的论文？我自己可以更快地证明结果。”</li>
</ol>
<p>这些陈述应该被视为贬义吗？不一定。由于数据的处理、解释和转化为有用信息的成本很高，所以有人不打算收集更多的事实，而是已经下定决心，这往往是好事。</p>
<p>一个人类社会可以被视为一个数据处理系统。信息存储在机构、书籍、大脑、统计表、计算机图书馆等地方。谁知道什么，或者信息在哪里的知识，往往比少数几个主题本身的深入、狭窄的知识更有价值。</p>
<p>根据西蒙的评论，日常对话中使用的某些词汇有时会具有完全不同的技术意义，我想区分原始数据和信息。当通信工程师谈论信息时，他指的是一个抽象概念，这个概念是根据通过传输系统发送的消息来定义的。无论听众是否理解这些消息，只要他们听到了，就无关紧要。根据这个定义，莎士比亚的十四行诗和一组随机噪音可以包含相同数量的信息。区别在于听众的解释。</p>
<p>在人类决策系统中，我们区分包含胡言乱语的消息和包含重要信息的消息。社会系统中一个关键的未解决问题是如何衡量社会系统中消息的上下文或语义信息内容。技术定义的信息并没有太大帮助。</p>
<p>在运营通信网络时，数据传输的成本和技术很重要。在社会系统中，有两个额外的特征至关重要。这些是如何确定使用符号或单词来传达意义的最佳方式，以及将消息翻译成对决策制定重要的信息。在社会系统中对消息进行编码和解码的关键词是评估。</p>
<p>我们中的许多人，尽管西蒙“及时”警告，仍然花费太多时间阅读《纽约时报》。我想起了《哈佛讽刺》的观察，即时报的口号应该是，“我们印刷的所有新闻”。至少这个感官系统为我们提供了一些预先选择。我们生活在一个数据丰富的世界中，传输、存储和复制的成本正在迅速下降。明智的人现在可以花费更多的时间和资源来解码和评估更容易获得的数据。不那么明智的人则有危险地将他们对不断增长的数据量的不理解与更好地了解混淆在一起。</p>
<p>最佳的信息系统并不一定是处理最多数据的系统。对于保护普通股东的最佳系统并不提供他完整的、详细的财务账户。事实上，通过提供他们不理解的财务细节和脚注，可以轻易地欺骗那些容易上当的人。现在可以向通常不理解的公众轰炸有关污染、杀虫剂的利弊、灌溉计划的价值和危险的无数细节，现场报道骚乱和抢劫、电视登月、自杀、谋杀以及成千上万股票和商品的历史价格。</p>
<p>计算机和现代通信技术对于研究人类和社会的重要性，就像望远镜和显微镜对于天文学和生物科学的重要性一样。但技术人员的抒情描述经常忽略了考虑人类时间和社会能力的有限性。数据丰富的世界可能看起来使千年近在咫尺。但未经组织的数据显示不出知识，现代通信既有教育的潜力，也有混淆的潜力。</p>
<p>普通人可以花多少时间从事政治？随着人口增长和世界变得更加复杂，社会如何为个人提供做出政治决策和维护自由所需的正确信息？问题不在于每秒生成或传输原始数据位的速度。它在于更基本的解释和理解层面。几年内，可能可以对许多政治问题进行几乎即时的全民公决。如果由于对不完全理解的事务的即时公众反应放大了快速反馈，导致不稳定，这可能代表技术上的胜利和社会灾难。</p>
<p>考虑一下可能的危险。第一个大型电视、时间共享的煽动者会是什么样子？他将如何利用现代通信的额外功能，如几乎瞬间的反馈？什么时候电视屏幕能够用适当的感官感觉描绘出在橡木桌后面（两千英里之外）解雇或斥责他的员工的老板，并让他感到和他与他同在房间里一样渺小，手掌也一样出汗？第一次时间共享的骚乱何时发生？奥森·威尔斯在三十年代几乎做到了，通过一个相当不错的广播恐慌。当前的暴民控制技术需要物理接近。在未来的世界中，我们是否仍然将暴民视为大量紧密堆积的人，还是通过电视控制台进行交互并在大面积上操作的孤立暴民将更有效？</p>
<p>我们正在进入一个大数据银行和大规模数据处理的时代。仍然有许多技术问题需要解决，但与设计组织以适应数据丰富的世界的社会技术问题相比，它们是次要的。如果我们想避免博尔赫斯图书馆或卡夫卡法庭所描绘的组织噩梦，我们必须改进我们对人类-机器组织的理解和设计。答案更多地在于教育人们将数据处理成更好、更相关的信息，而不是在处理时间上削减微秒。</p>
<p>西蒙建议，解决看似不切实际的问题，如编写冠军象棋程序，可能会为我们提供有价值的见解和重要的应用。我同意，并想扩展他的言论。我们必须更多地了解我们自己作为数据处理者和决策者的情况；但我们对自己的了解是昂贵的。人们没有数十亿的人工时间可以花费在受控实验上。电子时代为我们提供了观察我们自己运作的设备。</p>
<p>作为一个例子，我们可以在所有象棋俱乐部的棋盘上布线，并使棋子敏感，以便计算机可以立即记录每场比赛。知道如何提出正确问题的人可以提取信息，然后销毁数据，以防检索和存储成本超过保留原始数据的预期价值。</p>
<p>作为第二个例子，一个比现在更公平地向人们收费的汽车驾驶和停车的方法是将一个小型发射器附加到每辆车上，并让一个中央计算机根据在不同区域花费的时间每月向车主开具账单。这些数据还将允许研究交通流动和驾驶行为，尽管我们中的许多人可能会反对让大哥记录我们个人汽车的每一个动作。</p>
<p>我认为西蒙对象棋游戏和人工智能的兴趣是合法的，非常重要，但它忽略了社会智能，这可能与个体智能截然不同。在某些涉及纯粹竞争的社会情况下，构建一个人工玩家可能比象棋中的人工玩家更容易。你如何构建一个好人？你如何构建一个稳定的个体？具有这些属性的社会情境中的人工玩家不必非常聪明就能相当有效。</p>
<p>我想建议我们的组织和许多活动被视为实验。我们必须弄清楚如何使用计算机进行在线观察，同时仍然保护个人自由和隐私。如果我们不这样做，我们就面临着一个极端的风险，那就是永远无法了解足够多的关于我们自己和我们的组织能力的信息，以应对未来的复杂性。</p>
<p>原始数据的快速和经济的生成和传输为二十世纪的人类提供了生存所需的条件。然而，如果没有人类的自我研究，这些条件是不够的。新技术为我们提供了所需的药物，但我们必须成为我们自己的医生。</p>
<p><strong>西蒙</strong>：<br>
我非常同意舒比克最后的建议，即前面的大任务是使用新的信息处理技术来更好地了解我们自己。</p>
<p>关于人是否是串行处理设备的问题，我从舒比克的反证中学到的教训是，显然我每分钟说的还不够多，无法填满他的通道！顺便说一下，我显然不是圣经学者，否则我不会使用我所使用的“知道”的特定定义。</p>
<p>我想对舒比克的一些带有奥威尔色彩的言论表示非常强烈的不同意。我认为他低估了人类作为信息接收者的能力。即使在电视出现之前，我们也生活在一个主要由邻居传递的环境信息中，其中包括一些相当高的故事。我们掌握了处理信息过载的各种技巧。我们知道有些人可以比我们说得更快，并在几乎任何话题上给我们一个论点。我们耐心地听着，因为我们无法快速处理信息来反驳他们；也就是说，直到第二天，当我们找到他们论点的漏洞时。我父亲教给我的一个相关规则是，“永远不要在推销员面前签字。”通过采用这样的规则及其扩展，我们为自己留出了额外的处理时间来应对信息过载。</p>
<p>我真的不担心大哥在广播中大肆宣传。我认为在所有智力水平上，人类都有常识来保护他们免受他们信息环境的最坏特征的影响。如果信息过载真的让我应付不了，我最后的绝招就是遵循格特鲁德·斯坦在《爱丽丝·B·托克拉斯自传》的开头几页中的建议。“我喜欢风景，但我喜欢背对着它坐着。”</p>
<p><strong>主持人</strong>：<br>
在这次有趣的交流中，我们看到了舒比克的一些尖锐的抨击，以及德奇指控西蒙过于简单的观点！现在我们来到了提问环节，如果马丁·格林伯格愿意上台。</p>
<p><strong>格林伯格</strong>：<br>
为了效率，我将把问题分组。前三个问题对达达里奥国会议员和赫伯特·西蒙都有特别的兴趣。</p>
<p>威廉·摩尔问，是否限制科学研究，从而减缓变革进程，不会有减少动荡和社会反抗的好处，正如历史学家阿诺德·汤因比所声称的那样。</p>
<p>人口普查局实验室主任昆廷·卢丁问，西蒙是否反对过早的预警方法，是否认识到生态可能因快速且不可逆转的变化而处于危险之中。难道不期望建立一个预警网络吗？</p>
<p>华盛顿数据化的编辑菲尔·赫希想知道，鉴于技术目前的发展和快速进步，技术是否具有固有的概率或确定性危险。信息科学家和技术专家作为公民和纳税人，难道不应该运用他们的专业知识来解决这个问题，即使这意味着表达有争议的意见吗？</p>
<p><strong>主持人</strong>：<br>
我会对第一个问题持否定回答。我们不应该限制科学研究，否则我们将拥有一个无法应对其复杂问题的僵化社会。</p>
<p>结合接下来的两个问题，我们的技术是否可能变得不可逆转，它是否具有危险，我们是否做得足够？我会说我们做得不够。我们面临的风险是，我们环境中一些正在变得固定的趋势是如此微妙和复杂，以至于它们实际上可能是不可逆转的，并且在变得极其危险之前很难确定。答案是要做比我们现在更多的事情：在我们社会内部建立预测这些危险的能力，发展应对它们的机制，并使我们技术和科学社会的积极成果而不是消极成果，以应对挑战。</p>
<p><strong>西蒙</strong>：
我的回答与达达里奥国会议员几乎相同。我不认为我们应该或可以限制科学研究。我们的一些问题只有在拥有更多知识的情况下才能解决，而不是更少。</p>
<p>是否需要一个预警网络取决于所谓的网络是什么意思。由于我国有大量了解大量事务的人，我们已经拥有了一个预警网络。真正的问题是注意力的瓶颈。你如何将知识传递到网络中的适当点？你如何决定两件事中哪一件更令人担忧？</p>
<p>我认为信息技术专家与民主国家所有有知识的人一样，有责任花一些时间和精力去理解和尝试解释他们所了解的事物的社会意义、重要性和可能的后果。我认识的很多人确实将他们很大一部分精力投入到这种活动中。事实上，我认为这正是这整个系列讲座的重要内容之一。</p>
<p><strong>格林伯格</strong>：<br>
下一个问题来自斯蒂芬·J·陶伯，他是他所称的“布兰斯康的执行防腐服务”，即国家标准局信息科学部的负责人。他问，信息供需问题是否真的不是一个日益增长的需求函数和一个时间滞后问题，直到新平衡建立起来。此外，西方联合公司的经理威廉·M·霍尼什询问如何组织信息，使其对我们的个人经验有意义。</p>
<p><strong>舒比克</strong>：<br>
这再次是关于我们所说的“信息”的问题。那些坚持将原始数据误认为信息的人认为对信息的需求越来越大。例如，一些零售商建议在每件连衣裙上放一张卡片，以便立即知道库存短缺。获得新的数据堆很容易；但经常被忽略的是如何分析额外的数据。</p>
<p>我想讲一个相关的故事。这是关于猫头鹰的故事，它被认为是森林中最聪明的动物，以及蜈蚣的故事，蜈蚣带着九十九只疼痛的脚来找猫头鹰，问，“我该怎么办？”猫头鹰看着蜈蚣说，“很简单。接下来的两周你走一英寸高。”蜈蚣想了想，确信这确实会给它的时间让它的垫子愈合。然后蜈蚣对猫头鹰说，“怎么做？”猫头鹰回答，“我已经解决了你的概念问题。不要拿技术细节来烦我。”</p>
<p>这就是我们社会数据生成的根本困境。我们太愿意请求一个大样本，而不用担心如何分析它。那是一个技术细节。</p>
<p><strong>格林伯格</strong>：<br>
也许霍尼什先生的问题是以猫头鹰和蜈蚣故事的精神提出的。西蒙谈到了计算机组织、过滤和使信息更有意义、更易于消化的必要性。霍尼什先生可能正在寻求进一步的建议，以帮助忙碌的高管解决他的注意力稀缺问题。</p>
<p><strong>西蒙</strong>：<br>
我认为这是问题的核心。只要我们使用计算机的庞大力量以人类随后必须大量处理的形式喷出数据，显然我们就没有非常明智地使用这种能力。另一方面，我们朝着使计算机能够进行人们所谓的“思考”的那种数据处理、分析和数据压缩的每一步迈进，人和计算机就能更加有成效地协同工作。</p>
<p><strong>格林伯格</strong>:<br>
下一个问题来自约翰霍普金斯大学的埃利泽·纳多教授，实际上它更多地是一个断言而不是一个问题。他说，计算机不应该被编程做决策，而只应该帮助人类做出更好的决策。因此，他不同意到1975年让计算机成为世界象棋冠军的目标，更倾向于让计算机帮助赫伯特·西蒙成为冠军的目标。</p>
<p><strong>西蒙</strong>:<br>
我会很乐意成为世界象棋冠军，但如果计算机必须站在我身后，当我下棋时，这种喜悦将会受到损害。开发计算机世界象棋冠军的national目标将迫使我们真正发现一些关于人类如何思考和解决某些类型问题的基本信息。设定任务的原因是允许所需的研究和调查。</p>
<p>计算机不应该做决策的笼统陈述让我非常困惑。每当我现在飞往机场时，我都会问自己，飞机是被飞行员还是计算机着陆的。我希望它是由计算机着陆的，但我怀疑它是由飞行员着陆的。当它影响我的个人安全时，我希望计算机能够做出比人类更好的所有决策。</p>
<p><strong>格林伯格</strong>:<br>
最后一个问题来自通用电气信息网络部的编程分析师大卫·福斯特。他请求评论马歇尔·麦克卢汉的论点，即与机械技术相比，信息技术的发展正在导致从狭隘的专业化向更普遍性和综合的趋势转变。</p>
<p><strong>德奇</strong>:<br>
根据我对科学史的印象，跨学科工作时期往往与专业学科的进步时期交替。我不认为计算机的到来会改变这一点。坚持只进行跨学科活动可能要求每个专业放慢其进步速度，以赶上其他专业的速度。这是要求一切都能被每一个受过良好教育的人理解的人文学者的要求。</p>
<p>另一方面，在专业内部，可以只用该领域的知识资源解决的问题往往相对较快得到解决，然后该领域变得停滞不前，直到有人从其他地方带来额外的信息。然后提出新的问题，应用新的资源，并且在旧领域（已经有些变化）或其边界的新领域中，又有一个创造性的时期。</p>
<p>专业化和跨学科工作之间的交替让我想起了呼吸和吸气的过程。它们是知识长期生产周期的一部分，即使它们可能延伸到几代科学家。</p>
<h2 id="晚宴讨论">晚宴讨论</h2>
<p><strong>格林伯格</strong>：<br>
我知道有些人对西蒙的论文标题“为信息丰富的世界设计组织”感到困扰。你真的谈到了设计组织的主题吗？</p>
<p><strong>西蒙</strong>：<br>
嗯，这有点像舒比克讲的猫头鹰和蜈蚣的故事。我陈述了一般原则。任何想要应用它们的人都可以做到。</p>
<p>严肃地说，我们经常问一个组织中的决策者应该有什么信息才能做出决策，而没有考虑到他作为信息处理器的限制以及他是其一部分的系统类型。在假设注意力是一种稀缺资源的情况下，我确实认为我正在处理组织设计的一个核心问题。</p>
<p><strong>佩克曼</strong>：<br>
据报纸报道，林登·约翰逊让自己处于一种无法获得有关越南发展的某些信息的位置。一位高管如何确保他不喜欢看到的信息仍然能够过滤通过？</p>
<p><em>参与者：安德鲁·艾恩斯，科学技术办公室；约翰·巴克利，科学技术办公室；卡尔·德奇，哈佛大学；林肯·戈登，约翰霍普金斯大学；尼古拉斯·约翰逊，联邦通信委员会；安东尼·G·奥廷格，哈佛大学；约瑟夫·A·佩克曼，布鲁金斯学会；约翰·普拉特，密歇根大学；马丁·舒比克，耶鲁大学；伦纳德·西尔克，纽约时报（前布鲁金斯学会成员）；赫伯特·A·西蒙，卡内基梅隆大学；约瑟夫·韦岑鲍姆，麻省理工学院；马丁·格林伯格，主席，约翰霍普金斯大学</em>。</p>
<p><strong>西蒙</strong>：<br>
我不知道我们能让美国总统接受他真的不想看到的信息。但他可以组织自己，以便至少从一个问题的每个不同观点中 有一个信息渠道。这并不能消除获取可用信息的问题，因为他可支配的时间非常有限。他不能让一天超过24小时。</p>
<p><strong>戈登</strong>：<br>
我怀疑尤利乌斯·凯撒也可能只听取他想听的内容。艾森豪威尔是一个典型的被筛选的总统，但林登·约翰逊不是。我亲眼目睹了他的工作方式，并强烈感觉到他收到了很多信息。约翰逊过去常常带回家一大堆阅读材料。他不需要太多睡眠，并会在早上5点醒来，连续阅读两个小时。每当我的一份备忘录送到他那里时，他都会在当天或第二天采取行动。</p>
<p><strong>约翰逊</strong>：<br>
根据我自己与林登·约翰逊的亲身经验，我发现他阅读广泛并明智地寻求建议。他会故意在他面前设立辩论社团（实际上）来听取所有观点。他还阅读非正常渠道的内容。这就是我在自己的生活中所做的，我怀疑我们大多数人也是如此。我会选择广泛的材料，以免成为自己筛选系统的囚徒。</p>
<p><strong>奥廷格</strong>：<br>
巧合的是，西蒙的论文和我的非常吻合，尽管我恰好在编程象棋的问题上与他有很大的分歧。西蒙提出了三个非常深刻、重要的基本原则，阐明了我之前没有清楚理解的事情：</p>
<ol>
<li><strong>注意力是一种稀缺的商品</strong>；</li>
<li><strong>信息技术允许我们将努力从信息的拥有、存储和积累转移到其处理上，即使信息位于世界本身而不是文件中</strong>；</li>
<li><strong>为那些注意力稀缺的人过滤和组织环境至关重要</strong>。</li>
</ol>
<p>其他人可以将这些一般原则应用于特定组织，并探索它们的政治和经济含义。</p>
<p><strong>韦岑鲍姆</strong>:<br>
麻省理工学院有一个学生目前正在研究计算机“知道”意味着什么。他拿了一个关于玛丽和简被邀请参加聚会的短篇小说。妈妈说她们可以去，但他们的三岁妹妹不能去。玛丽和简分别是七岁和九岁。小妹妹想去，她哭了。妈妈试图安慰她。这就是故事。</p>
<p>这个学生试图让计算机“理解”这个故事。他试图写下故事中四个角色必须拥有的所有知识，以便在他们的小框架内运作——关于孩子、聚会等方面的知识。这已经花了大约七十页。这是非常困难的。</p>
<p>不久前，乔尔·摩西在麻省理工学院写了一篇关于符号积分的博士论文。他的程序可以积分符号表达式，可能比任何活着的数学家都要好。现在，来自世界各地的数学家给他写信，寻求他的程序解决困难的积分问题；有时他会发现标准表中的错误。这个程序比任何一个人，当然比它的作者，都更了解符号积分的“知识”。但它的智能位于人类知识的一个可隔离的隔间内。我们可以非常严格地划定它的界限，并说，“那又怎样？它知道所有关于积分的知识，但它还知道什么？”这个界限必须被打破；有学生正在努力打破它；但还有很长的路要走。</p>
<p>至于组织，我对通用电气一位副总裁提出的问题印象深刻，他抱怨自己经常因为没有及时获取信息而陷入困境。一位海军上将可能会问他关于一艘航空母舰上的蒸汽轮机迟到六个月的事情，问他打算如何处理。这将是他第一次听说这个合同。他想要的是关于通用电气公司发生的所有事情的预警系统，这些事情可能会达到这种地步。嗯，通用电气公司发生的事情远少于美国总统应该了解的事情。
西蒙。那位副总裁并不真的想知道那个问题。他想要的是处理它的方法。他认为处理它的方法就是知道它。他应该告诉海军上将，他会给他回电话。</p>
<p><strong>普拉特</strong>:<br>
在苏格拉底时代，亚历山大图书馆的藏书总数大约是十万册。没有证据表明苏格拉底曾经读过任何东西。他可能基于人类知识的一小部分进行推理。</p>
<p>亚里士多德也是如此，他真的试图了解一切。他一生中可能阅读的完整手稿总数（或者在他撰写伟大的百科全书时）不超过五千册。因此，显然可以通过过滤方法，在人类思维和组织方面取得巨大的进步，这些方法早在很久以前就已经知道了。</p>
<p><strong>西尔克</strong>:<br>
在我在《商业周刊》工作的十五年里，从某种意义上说，我花在了过滤上。简单地定义，编辑功能就是过滤，尽管它可以做得很差。例如，一份典型的《纽约时报》周日版重达五磅半，包含足以让人眼花四天阅读的文字，如果它阅读每一个字的话；这不是一个很好的过滤表现。</p>
<p>为什么新闻界不能更好地过滤？我认为它的一些扭曲是由于它的机构性质造成的。新闻界的招募方式与大学或大公司非常不同，这是早期它具有更本地化功能时期的遗风。它所做的过滤并不是基于最重要的事情是什么，而是基于最性感的事情是什么，尽管程度因页而异，部门而异。</p>
<p>如果你采用荣格的性格类型概念，好的编辑知道他的公众并不只由“思考”类型的人组成。他正在为广泛的人格类型写作，并以一种直观和理性的方式吸引他们。</p>
<p><strong>西蒙</strong>:<br>
我感觉到新闻界招募了有强烈冲动向公众传递信息的人。也许如果出版商放松下来，决定“赚一笔”，一些问题就会消失。在试图成为公共信息和教育的主要来源与定期（比如每天）出版之间存在严重的不一致性。<strong>大多数人应该接受的东西（如果他们真的要自我教育）并不是每天都在发生的。事实上，世界是可怕的冗余。今天发生的很多事情可以从昨天发生的事情中预测，不需要发表</strong>。</p>
<p><strong>舒比克</strong>:<br>
我当时在智利，项目卡美洛特进行时，我认为它爆炸的原因之一是智利的共产主义组织有一份日报，喜欢好标题。卡美洛特项目的故事为共产主义报纸提供了大约三周的头条新闻。每天，报纸都会在头版中央贴上卡美洛特秘密报告的另一部分，并写上一些评论。对于报纸记者来说，这是三周免费头版的梦想！</p>
<p><strong>戈登</strong>:<br>
霍姆斯大法官在处理日报时做得很好，当他把它比作看时钟的秒针时！</p>
<p>我想暂时改变话题，谈谈西蒙论文中没有提到的一面。正如我理解他的演讲，为信息丰富、通信贫乏的世界设计组织的一个要素是<strong>让大量的信息要么留在自然中，要么留在朋友的头脑中，需要时再利用</strong>。</p>
<p>关于这一点，我有两个问题。首先，如果你真的知道某个自然实验会产生所需的特定结果，你是否在某种程度上已经验证了实验，并超越了将信息留在自然中？</p>
<p>我的第二个问题是关于信息索引的。我认为教育过程的目的应该是教导学生如何开发他们自己的索引。显然，它不应该是将大量信息放入他们的头脑中，以便无限期地保留在那里。但是，组织中的人如何确定他有正确的索引呢？这对我来说是一个非常重要的设计问题。</p>
<p><strong>西蒙</strong>:<br>
你的第一个问题在技术上集中在逻辑上的一个点上。我不同意设计一个问题，以引出一个“是”或“否”的答案，与知道答案是不是“是”或“否”是一回事。我可能知道如何提出问题，但还不知道答案。</p>
<p>在许多情况下，我们不想提出问题，直到我们需要知道答案。最好的例子就是计算机技术本身。哈佛的霍华德·艾肯的Mark I计算机在很大程度上是因为人们觉得他们需要更好的数学表而建造的。但经过一番思考，他们意识到他们根本不需要这些表。他们真正想要的是子程序和编程语言，可以在需要时在表中获取条目。</p>
<p>关于第二个问题，我们可能不需要知道最好的方法是什么，而是需要知道我们现在所做的事情需要改变什么。我们需要更少地担心在人们头脑中存储事实，更多地关注在他们头脑中存储索引。我不知道最好的方法是什么，但我知道我们应该给予人们更好的能力，让他们在世界中移动，获取信息。</p>
<p><strong>格林伯格</strong>:<br>
卡尔·德奇一直保持着礼貌的沉默。我们可以听听你的想法吗？</p>
<p><strong>德奇</strong>:<br>
西蒙处理了注意力作为一种稀缺商品，但没有探讨它的目的或功能。一个组织寻求什么目标？它试图保持什么样的状态？什么会让一位总统再次当选？什么会让一所大学快乐并运作良好；什么会让它爆炸？这些问题的答案将有助于确定客观相关的信息输入。</p>
<p>相关性取决于目标和需求功能要求。目标和需求反过来又取决于组织结构。为了解释相关性，我们必须认为<strong>知识不仅是获取信息的途径，而且是获取、存储和处理信息的整个周期</strong>。</p>
<p>我们必须知道一些事实，以便从中推导出更多的事实。事实太少，我们无法推导出这样的规则；如果我们推导出它们，我们也不会知道我们得到了什么。我们的识别能力取决于我们的记忆库存。我们需要一定数量的事实记忆，以便识别新信息，甚至是我们自己的想法。</p>
<p>我对西蒙的热情有所保留，他以简化和节省思考的名义，主张丢弃大学现在教授的大量内容。我们在社会科学中学到的很多东西过去都是根据我们对历史的知识来解释的。如果我们丢弃太多的历史数据，我们的许多抽象概念可能会失去意义。教育的一个关键设计问题是确定产生和解释新信息所需的过去记忆的数量。</p>
<p>如果我们能够建立预期结果分布的一般模型，那么我们就可以特别关注分布在分布之外的事件。我们不会期望一个过程有一个单一的结果，而是（例如）符合正态分布曲线的结果。如果有些结果落在曲线之外，我们可能会怀疑我们对过程的形象，并放大检查偏差的原因。</p>
<p>这种预期分布的使用可以应用于监控或预警系统。学生总会有抱怨，校园总会有一些冲突，甚至自杀企图。但如果这些事情发生的太多（超出预期分布曲线），我们可能很快就会变得警觉起来，以进行制度或组织变革。（我们也可能发现，作为正常情况接受的悲剧或痛苦的频率实际上与我们的价值观不兼容。）</p>
<p>西蒙警告我们不要过度担心不可预见的后果。他觉得通过DDT的经验可能是了解其危险的最经济的方式。这引出了应该认真对待哪些警告的问题。在许多卡桑德拉呼声中，哪些值得关注？</p>
<p>统计背景数据可以帮助决定这些问题。关于人口爆炸 ，我们现在可以找出涉及的人数和国家。增长真的如预测的那样发生吗？粮食供应情况如何？人类的繁殖习惯在多快地改变，又是在什么条件下改变的？在哪里、何时以及在多大程度上存在真正的危险？</p>
<p>另一方面，我们可能没有足够的信息来评估二氧化碳或温室效应对大气的危险，据说这可能会改变我们星球的温度平衡。因此，这种危险的紧迫性可能较小。知识的缺乏增加了错误判断的风险，但并不意味着无法做出判断。</p>
<p>当事实知识和预测不明确时，我们必须依赖伦理。我认为伦理本质上是一套规则，规定了举证责任在哪里。如果在刑事案件中证据不完整或可疑，英美伦理认为被告在被证明有罪之前是无辜的。其他法律体系，从法国到俄罗斯，都认为他在证明自己无罪之前是有罪的。如果我们必须犯错，我们宁愿在哪一边犯错？</p>
<p>我同意西蒙的观点，即在新经验的价值超过意外损害风险的情况下，需要进行愉快的实验。然而，如果发生不可逆转的损害，例如人员死亡，我们需要比通过经验发现后果更好、更安全的方法。当然，有时候不采取行动可能会导致比采取行动更多的人死亡。1939年对希特勒的不作为可能导致的死亡人数比采取行动会更多。但在这种情况下，采取不可逆转行动之前的证据应该非常有力。正如埃德蒙·伯克所说，政治家在制造邪恶方面应该非常节约。</p>
<p>当我们采取行动时，我们能让它自我修正吗？我们能否建立连续的反馈机制，根据其结果再次纠正我们的行为？我们能否确保发现行动错误不是不忠诚的行为？我们可能需要调整西蒙的优先事项。与其现在就行动并从经验中学习，不如主要寻求节约注意力，我们可能更好地强调在自我修正的反馈系统中持续处理信息。</p>
<p><strong>普拉特</strong>:<br>
有可能在纠正我们当前不稳定的过程中，我们可能会将自己冻结成一个紧密集成的系统中，一个小错误会像东海岸的停电一样迅速传播。我们需要非常小心地在系统中保留很多松动性、多样性和宽松的耦合，即使在试图稳定它的同时。</p>
<p><strong>艾恩斯</strong>:<br>
先生们，我们实际上生活在一个与这里讨论的世界非常不同的世界中。这是一个信息系统在科学和技术中激增的世界。有些是手动的，有些是计算机化的，但都在增长。</p>
<p>有时它们似乎不是基于用户需求或要求，而是基于（例如）美国化学会希望改进其信息程序并创造新的、更高效的通信方式的愿望。有时它们因为国际竞争而增长。在信息系统的发展中，可以看到一股巨大的国际动荡。</p>
<p>在美国，我们缺乏规划和政策实体来指导这一发展。然而，这种激增仍在坚定地继续，有时不顾逻辑和明显的需要。在天文学、行为和社会科学、生物科学、化学、环境科学及相关技术、电子学、电气工程以及医学和健康科学等领域，已经有大约五百个系统。这些系统开始运作。有些是联邦的，有些是国家的，有些是国际的。</p>
<p>我希望我听到的讨论（这并不以任何方式批评已经讨论的内容）是，我们必须开始关注与这些发展相关的一些组织问题。我看到没有这样的活动，尽管我们非常努力地试图激发兴趣。尽管信息系统像在有利溶液中的晶体一样增长，但它们并不一定出现在一个集成或和谐的阵列中。长期来看，由此产生的重复和低效可能对社会造成极大的代价。</p>
<p><strong>巴克利</strong>:<br>
我看不出这些信息系统如何影响任何真正的决策，尽管我是从与艾恩斯相同的办公室看政府的。但那时，我专门处理环境问题上的总统和一些内阁官员，对决策是如何做出的，除了以实用的方式，我有一个非常有限的看法。</p>
<p>在我看来，信息的筛选最终在很大程度上是人为的，仔细安排，以便有多样化的输入和背景。尽管有两个机构的报告和工作人员的输入（应用了不同的筛选），但杀虫剂问题并没有引起总统和内阁的关注，直到它被《纽约时报》和《华盛顿邮报》报道。总统评论说，没有办法阻止政府最高层看到日报上的事情。考虑到这些现实，我担心艾恩斯谈论的可能确实会导致资金浪费。</p>
<p><strong>艾恩斯</strong>:<br>
让我集中谈谈环境质量领域。我们中的一些人认为，在这个领域运作的许多信息活动彼此之间沟通不畅。环境质量没有数据系统。在我看来，除非我们建立一个数据基线，具体了解我们试图改进的内容，否则污染无法得到控制。</p>
<p>同样的观点也适用于城市领域。城市更新研究和其他项目的人员在全国各地活跃，他们中的许多人不知道其他人在做什么。市、州和联邦级别的信息系统是前一个时代的产物。我们需要更好的东西。</p>
<p><strong>巴克利</strong>:<br>
我比任何事情都更需要贝尔电话系统中的联系。我有一份非常好的电话号码列表，无论是在政府内部还是外部。我真诚地认为，在不到五个电话的情况下，我可以在世界上任何地方获得任何主题的最佳信息。我不担心没有所有的数据。我没有能力处理它。但我有能力在需要时找到它。这就是我对总统和杜布里奇博士的用处。</p>
<p><strong>格林伯格</strong>:<br>
尼古拉斯·约翰逊，我们可以听听你的想法吗？</p>
<p><strong>约翰逊</strong>:<br>
我要提出四点。首先，我认为我们应该在思考中更加强调电视作为我们社会中的信息媒介的绝对关键重要性。除了工作和睡觉的时间，美国人花在看电视上的时间最多。平均而言，65岁的男子将花费他生命的九个完整年份，每年365天，每天24小时观看电视。</p>
<p>以TV Guide为例，它拥有美国任何杂志中最大的发行量（即使我们阅读，我们也是在阅读有关电视的内容）。我为TV Guide写的一篇文章产生了50到75封信。相比之下，我在“Face the Nation”上的一次露面（在全国广告中宣传在实际播出时间半小时后播出，确保那些感兴趣的人会错过它）产生了20倍的邮件。</p>
<p>超过60%的美国人表示，他们从电视上获得大部分信息和观点。我们的社会确实有一个成人和儿童教育电视的信息系统。它做得不好，但它就在那里。我认为，如果我们不考虑到电视及其影响的整体性，我们就无法认真努力解决社会的信息问题。</p>
<p>我想提出的第二点是关于定价的。在设定电话费率时，我的操作理论是我们应该尽可能降低通信费用，以便让人们有潜力获得尽可能多的信息。我们需要开发更好的选择设备，但如果我们可以比现在更便宜地制作Xerox复印件或长途电话，我们应该这样做。</p>
<p>德奇的饮水机例子在本地电话系统中有其类似之处，其中拨打电话的增量成本为零。我们拨打本地电话并不是基于它们的成本，而是基于我们想和谁交谈以及我们还有什么其他事情要做。我看不出在这个系统中为什么长途服务不能按照同样的原则运作。有了国内卫星，所有电话都走四万四千英里——上升两万两千英里，下降两万两千英里。无论两个地面站相距一千英里还是三千英里，都没有关系。为什么在这个系统中以距离为基础定价？</p>
<p>接下来，我认为艾恩斯努力具体谈论是建设性的。让我举一个例子，我称之为个性化杂志。现在许多政府机构都有早晨剪辑服务，这是一项努力，从大量杂志和报纸中调查和选择特定专业的内容。联邦通信委员会有一个非常有用的关于通信项目的定期服务，为我提供了来自许多来源的定期输入。</p>
<p>贝尔实验室、IBM和其他公司拥有选择性传播系统，根据用户的兴趣进行选择，无论是作者、主题还是期刊。相关的项目会在每周定期送给用户Xerox复印件。我认为我们将看到更多这样的情况。没有理由不可以通过增加技术将其扩展到高管早晨的闭路电视演示中。它可以包括书籍的部分内容和用户希望查看的短期课程。</p>
<p>我的最后一点涉及打电话给人们获取信息。我也这样做，同意这是现在最有效的信息检索系统。但我们必须记住我们所称的别人打电话和他们打电话给我们之间的区别。这给我们施加了义务，至少要保留一些我们自己的信息，至少如果我们碰巧处于工作职员或高管级别。否则，突然有一天，每个人都在给其他人打电话，没有人知道任何事情。那只会让电话公司受益。</p>
<p><strong>普拉特</strong>：<br>
我很好奇这个过程是否会导致闭环：有人打电话给你，以便了解你向别人询问的一些事情。</p>
<p><strong>舒比克</strong>：<br>
我想起了一位老精神病医生和一位年轻精神病医生一起乘电梯下楼的故事。经过一天非常艰难的一天，年轻的精神病医生看起来很疲惫，但他知道那位老精神病医生（完全镇定）看了四倍的病人。他说：“医生，你是怎么做到的？”老精神病医生回答：“谁在听？”</p>
<p><strong>西蒙</strong>：<br>
这个故事几乎说明了我的观点。我们已经开发了各种各样的信息来源：艾恩斯讨论的系统、约翰逊提议的免费电话等等。现在是时候转移我们的注意力，关注接收端的人，问问他们实际上是如何过滤所有这些信息的。</p>
<p>【西蒙在编辑过程中补充。】
重读讨论和问题，我深感它们反映了对技术的普遍不信任和面对当代问题的恐慌情绪。我无法分享这种情绪，必须重申我的论文的乐观主义，基于一些我认为有良好经验证据和逻辑支持的前提。</p>
<p>首先，虽然技术无疑会产生一些问题，这些问题必须得到解决（使用相同的技术！），但技术是人类摆脱亚当诅咒的唯一和最好的希望。我们需要更多的技术，而不是更少。</p>
<p>其次，信息过载存在于读者的心中。信息并不一定要被处理，因为它存在。智能程序的过滤是答案的主要部分。</p>
<p>第三，不采取行动也是一种行动，对现实世界的实验并不像听起来那么冒险，至少不像那种不做任何新的或不同的事情直到所有事实都清楚的实验那么冒险。生活要求我们平衡风险；它不允许我们完全避免它们。此外，我们很容易夸大我们对自然的实验是多么不可逆转。我发现很难找到真正重要的不可逆性的实例。</p>
<p>第四，大多数关于 Big Brother的科幻小说之所以是科幻小说，正是因为它忽略了 Big Brother的信息过载问题。无论是真实还是虚构的信息短缺，从来都不是政治警察运作的限制因素，我也没有理由相信电视或计算机的可用性能改变这种平衡。</p>
<h4 id="参考文献">参考文献</h4>
<ol>
<li>约翰·W·加德纳，“我们想要什么样的社会？”，《读者文摘》，1969年9月。</li>
<li>国家技术科学院：<em>评估和选择的过程</em> ，给美国众议院科学和宇航委员会的报告，美国政府印刷局，1969年7月。</li>
<li>爱德华·A·费根鲍姆和朱利安·费尔德曼，《计算机与思维》，麦格劳-希尔，1963年。</li>
<li>克劳德·香农，《通信的数学理论》，伊利诺伊大学出版社，1949年。</li>
<li>约翰·G·凯门尼，“大型时分共享网络”，本卷。</li>
<li>国家科学院，技术，赫伯特·A·西蒙，《自动化的形状》，哈珀与罗，1965年；赫伯特·A·西蒙，《人工科学》，麻省理工学院出版社，1969年。</li>
<li>约翰·普拉特，“我们必须做什么”，《科学》，166（1969），1115-1121。</li>
<li>安东尼·G·奥廷格，“国家决策过程中的通信”，本卷。</li>
<li>乔尔·摩西斯，“符号积分”，MAC-TR 47（论文），项目MAC，麻省理工学院，AD662666，1967年12月。</li>
<li>尼古拉斯·约翰逊，“沉默的屏幕”，《电视指南》，1969年7月5日，第6-13页。</li>
</ol>
]]></atom:encoded>
    </item>
  </channel>
</rss>
