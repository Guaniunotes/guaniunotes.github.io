<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nextjs on 蜗牛笔记</title>
    <link>https://guaniunotes.github.io/tags/nextjs/</link>
    <description>Recent content in nextjs on 蜗牛笔记</description>
    <image>
      <title>蜗牛笔记</title>
      <url>https://guaniunotes.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://guaniunotes.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 01 Jul 2024 20:28:52 +0800</lastBuildDate>
    <atom:link href="https://guaniunotes.github.io/tags/nextjs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>不用vercel如何在VPS上部署你的Next.js项目</title>
      <link>https://guaniunotes.github.io/posts/build-nextjs-app-vps/</link>
      <pubDate>Mon, 01 Jul 2024 20:28:52 +0800</pubDate>
      <guid>https://guaniunotes.github.io/posts/build-nextjs-app-vps/</guid>
      <description>一般大家部署Next.js项目会直接用vercel的服务，毕竟它一键部署，方便且迅速，什么配置都不用操心。但是，除了使用vercel的平台，</description>
      <atom:encoded><![CDATA[<p>一般大家部署Next.js项目会直接用vercel的服务，毕竟它一键部署，方便且迅速，什么配置都不用操心。但是，除了使用vercel的平台，我们也可以通过虚拟专用服务器（VPS）自行部署Next.js项目。下面分享一下在VPS上部署Next.js项目的方法。</p>
<h2 id="1-vps基础配置">1. VPS基础配置</h2>
<ol>
<li>
<p>选择VPS服务商（本例以<a href="https://hostinger.com.hk?REFERRALCODE=1MOFENG3340">Hostinger</a>服务商为例）<br>
登陆HOSTINGER VPS面板，选择VPS的位置，一般选择United States，你也可以选择离你服务的用户近的主机位置。</p>
</li>
<li>
<p>配置操作系统。此时有三个选项：</p>
<ul>
<li>OS with Control Panel 带控制面板的系统</li>
<li>Plain OS 没有控制面板的系统</li>
<li>Applications 带有应用程序的系统，包含wordpress，Nextcloud，Node.js<br>
建议选择第一个，这样能更轻松地管理多个应用程序或多个站点。</li>
</ul>
</li>
<li>
<p>选择应用程序CloudPanel。</p>
</li>
<li>
<p>不用勾选任何其他的软件。</p>
</li>
<li>
<p>为控制面板设置密码。</p>
</li>
<li>
<p>设置SSH访问密码，等待几分钟后，完成设置。</p>
</li>
<li>
<p>接下来进行域名购买，也可以后面再设置。<br>
此时，我们进入VPS控制面板，记下IP address后面会用到。</p>
</li>
</ol>
<h2 id="2-项目环境配置">2. 项目环境配置</h2>
<ol>
<li>在VPS控制面板的SSH access中可以找到一行：</li>
</ol>
<blockquote>
<p>Terminal ssh <a href="mailto:root@xx.xx.xx.xxx">root@xx.xx.xx.xxx</a></p>
</blockquote>
<p>我们需要在电脑终端中运行它。 你可以使用vs code运行，或者单独打开终端操作。</p>
<ol start="2">
<li>打开独立终端，输入你的VPS上的IP地址</li>
</ol>
<pre tabindex="0"><code>ssh root@xx.xx.xx.xxx
</code></pre><p>出现独立安全问题，选择yes。输入之前设置的SSH访问密码（不是VPS面板的密码）。登陆成功后，能看到云面板的信息。</p>
<ol start="3">
<li>检查git是否正常安装。
<ul>
<li>输入 pwd 查看当前工作目录，可以看到我们处于/root目录下。</li>
<li>输入ls，检查此处的文件。</li>
<li>输入node -v，会发现服务器没有安装node.js。</li>
<li>先查询git是否安装，输入git，发现git已经预先安装。</li>
</ul>
</li>
<li>安装NPM。</li>
</ol>
<pre tabindex="0"><code>   apt install NPM
   npm -v
</code></pre><p>安装完毕后，检查当前安装的版本，如果出现版本号，说明安装成功。</p>
<ol start="5">
<li>安装Node.js</li>
</ol>
<pre tabindex="0"><code>   npm install -g n //安装指定版本
   n lastest //安装最新版本
   node -v
</code></pre><p>可以看到最新的node.js版本。NEXT.js的应用此时默认运行地址为localhost：3000，也就是我们的VPS的IP地址。</p>
<ol start="6">
<li>新增Nginx站点配置</li>
</ol>
<pre tabindex="0"><code>nginx -v 
</code></pre><p>先检查nginx是否已经安装。
添加站点配置文件(文件名你自己定义，假设为Nextjs-app)。
运行以下代码，这将打开一个编辑器</p>
<pre tabindex="0"><code>sudo nano /etc/nginx/sites-availables/Nextjs-app.conf
</code></pre><p>在编辑器中粘贴以下代码片段：</p>
<pre tabindex="0"><code>server {
    listen 80;
    server_name xx.xx.xx.xxx; # VPS IP address

    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_headr Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
</code></pre><p>粘贴完毕后回车，退出编辑。</p>
<p>检查文件是否有效，输入以下命令：</p>
<pre tabindex="0"><code>ls /etc/nginx/sites-availables/  
</code></pre><p>如果返回文件名如Nextjs-app.conf，这便完成了nginx的一个站点的配置。</p>
<ol start="7">
<li>启用服务器配置<br>
输入以下内容，创建一个链接：</li>
</ol>
<pre tabindex="0"><code>sudo ln -s /etc/nginx/sites-availables/Nextjs-app.conf /etc/nginx/sites-enabled/ 
</code></pre><p>检查站点启用路径中的内容：</p>
<pre tabindex="0"><code>ls etc/nginx/sites-enabled/
</code></pre><p>结果应该显示：Nextjs-app.conf default.conf</p>
<h2 id="3-nextjs项目安装">3. Next.js项目安装</h2>
<ol>
<li>为你的Next.js项目创建目录</li>
</ol>
<pre tabindex="0"><code>mkdir /var/www/Nextjs-app
</code></pre><ol start="2">
<li>进入该目录</li>
</ol>
<pre tabindex="0"><code>cd /var/www/Nextjs-app
</code></pre><p>输入 ls，可以看到目录现在是空的。</p>
<ol start="3">
<li>从你的Github项目仓克隆到这个目录中</li>
</ol>
<pre tabindex="0"><code>git clone https://github.com/yourname/Nextjs-app.git
</code></pre><ol start="4">
<li>进入应用目录</li>
</ol>
<pre tabindex="0"><code>cd Nextjs-app
npm install
</code></pre><p>安装应用，但此时会出错。解决这个问题的方法，就是退出ssh并重新登录。</p>
<pre tabindex="0"><code>exit 
</code></pre><p>退出ssh，然后再次登陆:</p>
<pre tabindex="0"><code>ssh root add
</code></pre><p>再次进入你的项目目录：</p>
<pre tabindex="0"><code>cd /var/www/Nextjs-app/Nextjs-app/
</code></pre><p>再次运行</p>
<pre tabindex="0"><code>npm install 
</code></pre><p>构建应用程序:</p>
<pre tabindex="0"><code>npm run build 
</code></pre><ol start="5">
<li>由于更新了配置，所以需要重新启动Nginx</li>
</ol>
<pre tabindex="0"><code>sudo service nginx restart 
</code></pre><ol start="6">
<li>运行生产版本:</li>
</ol>
<pre tabindex="0"><code>npm run start
</code></pre><p>部署完毕。此时就可以在浏览器输入你的VPS IP地址访问你的Next.js应用程序。</p>
]]></atom:encoded>
    </item>
  </channel>
</rss>
